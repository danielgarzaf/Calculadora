Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Calculadora.X.production.sym \
  --cmf=dist/default/production\Calculadora.X.production.cmf -z -Q18F45K50 \
  -oC:\Users\danie\AppData\Local\Temp\sb20.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Calculadora.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=060h-07FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F53h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\danie\AppData\Local\Temp\sb20.o \
  dist/default/production\Calculadora.X.production.o 

Object code version is 3.11

Machine type is 18F45K50

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\danie\AppData\Local\Temp\sb20.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Calculadora.X.production.o
                smallconst                          800      800        C      400       0
                text16                              C7C      C7C       34      406       0
                text15                              D40      D40       1A      406       0
                text14                              D98      D98        8      406       0
                text13                              D5A      D5A       18      406       0
                text12                              D82      D82        E      406       0
                text11                              CDE      CDE       2C      406       0
                text10                              B86      B86       52      406       0
                text9                               D90      D90        8      406       0
                text8                               BD8      BD8       3A      406       0
                text7                               B08      B08       7E      406       0
                text6                               C12      C12       36      406       0
                text5                               D0A      D0A       1C      406       0
                text4                               D26      D26       1A      406       0
                text3                               80C      80C      10C      406       0
                text2                               A1C      A1C       EC      406       0
                text1                               918      918      104      406       0
                text0                               C48      C48       34      406       0
                cstackCOMRAM                          1        1       17        1       1
                dataCOMRAM                           18       18       10        1       1
                cinit                               CB0      CB0       2E      406       0
                idataCOMRAM                         D72      D72       10      406       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text16                              C7C      C7C       34         0
                text15                              D40      D40       1A         0
                text14                              D98      D98        8         0
                text13                              D5A      D5A       18         0
                text12                              D82      D82        E         0
                text11                              CDE      CDE       2C         0
                text10                              B86      B86       52         0
                text9                               D90      D90        8         0
                text8                               BD8      BD8       3A         0
                text7                               B08      B08       7E         0
                text6                               C12      C12       36         0
                text5                               D0A      D0A       1C         0
                text4                               D26      D26       1A         0
                text3                               80C      80C      10C         0
                text2                               A1C      A1C       EC         0
                text1                               918      918      104         0
                text0                               C48      C48       34         0
                cinit                               CB0      CB0       2E         0
                idataCOMRAM                         D72      D72       10         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800        C         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       17         1
                dataCOMRAM                           18       18       10         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000027  000028         1       1  COMRAM  
                smallconst                     000800  00000C  00080C       400       0  SMALLCON
                text3                          00080C  000594  000DA0       406       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           000028-0007FF              7D8
        CODE             000004-0007FF              7FC
                         000DA0-007FFF             7260
        COMRAM           000028-00005F               38
        CONST            000004-0007FF              7FC
                         000DA0-007FFF             7260
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000DA0-007FFF             7260
        RAM              000060-0007FF              100
        SFR              000F53-000FFF                D
        SMALLCONST       000DA0-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?___aldiv                 cstackCOMRAM 000001
?___almod                 cstackCOMRAM 000001
?_strlen                  cstackCOMRAM 000001
LCD_cmd@cmd               cstackCOMRAM 000002
LCD_cursor@RL             cstackCOMRAM 000005
LCD_cursor@SC             cstackCOMRAM 000003
LCD_dispControl@B         cstackCOMRAM 000007
LCD_dispControl@C         cstackCOMRAM 000005
LCD_dispControl@D         cstackCOMRAM 000003
LCD_entryMode@ID          cstackCOMRAM 000003
LCD_entryMode@SH          cstackCOMRAM 000005
LCD_functionSet@DL        cstackCOMRAM 000003
LCD_functionSet@F         cstackCOMRAM 000007
LCD_functionSet@N         cstackCOMRAM 000005
LCD_rdy@busy              cstackCOMRAM 000001
LCD_writeChar@data        cstackCOMRAM 000002
LCD_writeStr@data         cstackCOMRAM 000005
LCD_writeStr@i            cstackCOMRAM 00000B
LCD_writeStr@length       cstackCOMRAM 000009
_ANSELA                   (abs)        000F5B
_ANSELB                   (abs)        000F5C
_ANSELC                   (abs)        000F5D
_ANSELD                   (abs)        000F5E
_LATA                     (abs)        000F89
_LATB                     (abs)        000F8A
_LATC                     (abs)        000F8B
_LATD                     (abs)        000F8C
_LCD_clear                text14       000D98
_LCD_cmd                  text15       000D40
_LCD_cursor               text5        000D0A
_LCD_dispControl          text13       000D5A
_LCD_entryMode            text12       000D82
_LCD_functionSet          text11       000CDE
_LCD_init                 text10       000B86
_LCD_newLine              text9        000D90
_LCD_rdy                  text16       000C7C
_LCD_writeChar            text4        000D26
_LCD_writeStr             text7        000B08
_PORTCbits                (abs)        000F82
_PORTD                    (abs)        000F83
_TRISA                    (abs)        000F92
_TRISB                    (abs)        000F93
_TRISCbits                (abs)        000F94
_TRISD                    (abs)        000F95
__CFG_BOREN$SBORDIS       (abs)        000000
__CFG_BORV$190            (abs)        000000
__CFG_CCP2MX$RC1          (abs)        000000
__CFG_CFGPLLEN$OFF        (abs)        000000
__CFG_CP0$OFF             (abs)        000000
__CFG_CP1$OFF             (abs)        000000
__CFG_CP2$OFF             (abs)        000000
__CFG_CP3$OFF             (abs)        000000
__CFG_CPB$OFF             (abs)        000000
__CFG_CPD$OFF             (abs)        000000
__CFG_CPUDIV$NOCLKDIV     (abs)        000000
__CFG_EBTR0$OFF           (abs)        000000
__CFG_EBTR1$OFF           (abs)        000000
__CFG_EBTR2$OFF           (abs)        000000
__CFG_EBTR3$OFF           (abs)        000000
__CFG_EBTRB$OFF           (abs)        000000
__CFG_FCMEN$OFF           (abs)        000000
__CFG_FOSC$INTOSCIO       (abs)        000000
__CFG_ICPRT$OFF           (abs)        000000
__CFG_IESO$OFF            (abs)        000000
__CFG_LS48MHZ$SYS24X4     (abs)        000000
__CFG_LVP$ON              (abs)        000000
__CFG_MCLRE$ON            (abs)        000000
__CFG_PBADEN$ON           (abs)        000000
__CFG_PCLKEN$ON           (abs)        000000
__CFG_PLLSEL$PLL4X        (abs)        000000
__CFG_SDOMX$RB3           (abs)        000000
__CFG_STVREN$ON           (abs)        000000
__CFG_T3CMX$RC0           (abs)        000000
__CFG_WDTEN$OFF           (abs)        000000
__CFG_WDTPS$32768         (abs)        000000
__CFG_WRT0$OFF            (abs)        000000
__CFG_WRT1$OFF            (abs)        000000
__CFG_WRT2$OFF            (abs)        000000
__CFG_WRT3$OFF            (abs)        000000
__CFG_WRTB$OFF            (abs)        000000
__CFG_WRTC$OFF            (abs)        000000
__CFG_WRTD$OFF            (abs)        000000
__CFG_XINST$OFF           (abs)        000000
__CFG_nLPBOR$OFF          (abs)        000000
__CFG_nPWRTEN$OFF         (abs)        000000
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbank6                  bank6        000000
__Hbank7                  bank7        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__Hbss                    bss          000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       30000E
__Hconst                  const        000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__HdataCOMRAM             dataCOMRAM   000000
__Heeprom_data            eeprom_data  000000
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__HidataCOMRAM            idataCOMRAM  000000
__Hidloc                  idloc        200008
__Hifardata               ifardata     000000
__Hinit                   init         000004
__Hintcode                intcode      000000
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    000000
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      000000
__Hram                    ram          000000
__Hramtop                 ramtop       000800
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000000
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   00080C
__Hspace_0                (abs)        30000E
__Hspace_1                (abs)        000028
__Hspace_2                (abs)        000000
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         000000
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext12                 text12       000000
__Htext13                 text13       000000
__Htext14                 text14       000000
__Htext15                 text15       000000
__Htext16                 text16       000000
__Htext2                  text2        000000
__Htext3                  text3        000000
__Htext4                  text4        000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbank6                  bank6        000000
__Lbank7                  bank7        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__Lbss                    bss          000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       300000
__Lconst                  const        000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__LdataCOMRAM             dataCOMRAM   000000
__Leeprom_data            eeprom_data  000000
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__LidataCOMRAM            idataCOMRAM  000000
__Lidloc                  idloc        200000
__Lifardata               ifardata     000000
__Linit                   init         000000
__Lintcode                intcode      000000
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    000000
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      000000
__Lram                    ram          000000
__Lramtop                 ramtop       000800
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000800
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         000000
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext12                 text12       000000
__Ltext13                 text13       000000
__Ltext14                 text14       000000
__Ltext15                 text15       000000
__Ltext16                 text16       000000
__Ltext2                  text2        000000
__Ltext3                  text3        000000
__Ltext4                  text4        000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        30000E
__S1                      (abs)        000028
__S2                      (abs)        000000
___aldiv                  text3        00080C
___aldiv@counter          cstackCOMRAM 000009
___aldiv@dividend         cstackCOMRAM 000001
___aldiv@divisor          cstackCOMRAM 000005
___aldiv@quotient         cstackCOMRAM 00000B
___aldiv@sign             cstackCOMRAM 00000A
___almod                  text2        000A1C
___almod@counter          cstackCOMRAM 000009
___almod@dividend         cstackCOMRAM 000001
___almod@divisor          cstackCOMRAM 000005
___almod@sign             cstackCOMRAM 00000A
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___param_bank             (abs)        000000
___rparam_used            (abs)        000001
___sp                     stack        000000
__accesstop               (abs)        000060
__activetblptr            (abs)        000001
__end_of_LCD_clear        text14       000DA0
__end_of_LCD_cmd          text15       000D5A
__end_of_LCD_cursor       text5        000D26
__end_of_LCD_dispControl  text13       000D72
__end_of_LCD_entryMode    text12       000D90
__end_of_LCD_functionSet  text11       000D0A
__end_of_LCD_init         text10       000BD8
__end_of_LCD_newLine      text9        000D98
__end_of_LCD_rdy          text16       000CB0
__end_of_LCD_writeChar    text4        000D40
__end_of_LCD_writeStr     text7        000B86
__end_of___aldiv          text3        000918
__end_of___almod          text2        000B08
__end_of__initialization  cinit        000CD0
__end_of_main             text0        000C7C
__end_of_ports_init       text6        000C48
__end_of_printCalcResult  text1        000A1C
__end_of_strlen           text8        000C12
__initialization          cinit        000CB0
__mediumconst             mediumconst  000000
__pcinit                  cinit        000CB0
__pcstackCOMRAM           cstackCOMRAM 000001
__pdataCOMRAM             dataCOMRAM   000018
__pidataCOMRAM            idataCOMRAM  000D72
__psmallconst             smallconst   000800
__ptext0                  text0        000C48
__ptext1                  text1        000918
__ptext10                 text10       000B86
__ptext11                 text11       000CDE
__ptext12                 text12       000D82
__ptext13                 text13       000D5A
__ptext14                 text14       000D98
__ptext15                 text15       000D40
__ptext16                 text16       000C7C
__ptext2                  text2        000A1C
__ptext3                  text3        00080C
__ptext4                  text4        000D26
__ptext5                  text5        000D0A
__ptext6                  text6        000C12
__ptext7                  text7        000B08
__ptext8                  text8        000BD8
__ptext9                  text9        000D90
__ramtop                  ramtop       000800
__size_of_LCD_clear       (abs)        000000
__size_of_LCD_cmd         (abs)        000000
__size_of_LCD_cursor      (abs)        000000
__size_of_LCD_dispControl (abs)        000000
__size_of_LCD_entryMode   (abs)        000000
__size_of_LCD_functionSet (abs)        000000
__size_of_LCD_init        (abs)        000000
__size_of_LCD_newLine     (abs)        000000
__size_of_LCD_rdy         (abs)        000000
__size_of_LCD_writeChar   (abs)        000000
__size_of_LCD_writeStr    (abs)        000000
__size_of___aldiv         (abs)        000000
__size_of___almod         (abs)        000000
__size_of_main            (abs)        000000
__size_of_ports_init      (abs)        000000
__size_of_printCalcResult (abs)        000000
__size_of_strlen          (abs)        000000
__smallconst              smallconst   000800
_main                     text0        000C48
_ports_init               text6        000C12
_printCalcResult          text1        000918
_strlen                   text8        000BD8
end_of_initialization     cinit        000CD0
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
printCalcResult@i         cstackCOMRAM 000016
printCalcResult@modulo    cstackCOMRAM 000015
printCalcResult@result    cstackCOMRAM 00000F
stackhi                   (abs)        0007FF
stacklo                   (abs)        000060
start                     init         000000
start_initialization      cinit        000CB0
strlen@a                  cstackCOMRAM 000003
strlen@s                  cstackCOMRAM 000001


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 29 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  result          4    0        long 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_init
		_LCD_newLine
		_LCD_writeStr
		_ports_init
		_printCalcResult
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _printCalcResult *****************
 Defined at:
		line 70 in file "main.c"
 Parameters:    Size  Location     Type
  result          4   14[COMRAM] long 
 Auto vars:     Size  Location     Type
  modulo          1   20[COMRAM] unsigned char 
  i               2   21[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_cursor
		_LCD_dispControl
		_LCD_entryMode
		_LCD_writeChar
		___aldiv
		___almod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___almod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
 Parameters:    Size  Location     Type
  dividend        4    0[COMRAM] long 
  divisor         4    4[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1    9[COMRAM] unsigned char 
  counter         1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_printCalcResult
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 Parameters:    Size  Location     Type
  dividend        4    0[COMRAM] long 
  divisor         4    4[COMRAM] long 
 Auto vars:     Size  Location     Type
  quotient        4   10[COMRAM] long 
  sign            1    9[COMRAM] unsigned char 
  counter         1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _LCD_writeChar *****************
 Defined at:
		line 128 in file "./lcd.h"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD_rdy
 This function is called by:
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _LCD_cursor *****************
 Defined at:
		line 67 in file "./lcd.h"
 Parameters:    Size  Location     Type
  SC              2    2[COMRAM] short 
  RL              2    4[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _ports_init *****************
 Defined at:
		line 48 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_writeStr *****************
 Defined at:
		line 110 in file "./lcd.h"
 Parameters:    Size  Location     Type
  data            2    4[COMRAM] PTR unsigned char 
		 -> STR_1(10), 
 Auto vars:     Size  Location     Type
  i               2   10[COMRAM] int 
  length          2    8[COMRAM] short 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD_rdy
		_strlen
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> STR_1(10), 
 Auto vars:     Size  Location     Type
  a               2    2[COMRAM] PTR const unsigned char 
		 -> STR_1(10), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_writeStr
 This function uses a non-reentrant model


 *************** function _LCD_newLine *****************
 Defined at:
		line 75 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_init *****************
 Defined at:
		line 44 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_clear
		_LCD_dispControl
		_LCD_entryMode
		_LCD_functionSet
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_functionSet *****************
 Defined at:
		line 71 in file "./lcd.h"
 Parameters:    Size  Location     Type
  DL              2    2[COMRAM] short 
  N               2    4[COMRAM] short 
  F               2    6[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
 This function uses a non-reentrant model


 *************** function _LCD_entryMode *****************
 Defined at:
		line 59 in file "./lcd.h"
 Parameters:    Size  Location     Type
  ID              2    2[COMRAM] short 
  SH              2    4[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _LCD_dispControl *****************
 Defined at:
		line 63 in file "./lcd.h"
 Parameters:    Size  Location     Type
  D               2    2[COMRAM] short 
  C               2    4[COMRAM] short 
  B               2    6[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _LCD_clear *****************
 Defined at:
		line 51 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
 This function uses a non-reentrant model


 *************** function _LCD_cmd *****************
 Defined at:
		line 79 in file "./lcd.h"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD_rdy
 This function is called by:
		_LCD_clear
		_LCD_entryMode
		_LCD_dispControl
		_LCD_cursor
		_LCD_functionSet
		_LCD_newLine
		_LCD_returnHome
 This function uses a non-reentrant model


 *************** function _LCD_rdy *****************
 Defined at:
		line 91 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  busy            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_cmd
		_LCD_writeStr
		_LCD_writeChar
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	0BD8	0000	59

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c estimated size: 59

./lcd.h
		_LCD_clear     		CODE           	0D98	0000	9
		_LCD_cursor    		CODE           	0D0A	0000	29
		_LCD_writeStr  		CODE           	0B08	0000	127
		_LCD_dispControl		CODE           	0D5A	0000	25
		_LCD_functionSet		CODE           	0CDE	0000	45
		_LCD_writeChar 		CODE           	0D26	0000	27
		_LCD_init      		CODE           	0B86	0000	83
		_LCD_entryMode 		CODE           	0D82	0000	15
		_LCD_rdy       		CODE           	0C7C	0000	53
		_LCD_cmd       		CODE           	0D40	0000	27
		_LCD_newLine   		CODE           	0D90	0000	9

./lcd.h estimated size: 449

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c
		___aldiv       		CODE           	080C	0000	269

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c estimated size: 269

shared
		__initialization		CODE           	0CB0	0000	33

shared estimated size: 33

main.c
		_printCalcResult		CODE           	0918	0000	261
		_ports_init    		CODE           	0C12	0000	55
		_main          		CODE           	0C48	0000	53

main.c estimated size: 369

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c
		___almod       		CODE           	0A1C	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c estimated size: 237

