

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Nov 17 00:53:37 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F45K50 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  007B0D                     __pidataCOMRAM:
    65                           	opt callstack 0
    66                           
    67                           ;initializer for main@key_vals
    68  007B0D  01                 	db	1
    69  007B0E  02                 	db	2
    70  007B0F  03                 	db	3
    71  007B10  0A                 	db	10
    72  007B11  04                 	db	4
    73  007B12  05                 	db	5
    74  007B13  06                 	db	6
    75  007B14  0B                 	db	11
    76  007B15  07                 	db	7
    77  007B16  08                 	db	8
    78  007B17  09                 	db	9
    79  007B18  0C                 	db	12
    80  007B19  0E                 	db	14
    81  007B1A  00                 	db	0
    82  007B1B  0F                 	db	15
    83  007B1C  0D                 	db	13
    84                           
    85                           ;initializer for main@F5373
    86  007B1D  31                 	db	49
    87  007B1E  31                 	db	49
    88  007B1F  35                 	db	53
    89  007B20  78                 	db	120
    90  007B21  34                 	db	52
    91  007B22  34                 	db	52
    92  007B23  00                 	db	0
    93  0000                     _ANSELB	set	3932
    94  0000                     _ANSELC	set	3933
    95  0000                     _ANSELD	set	3934
    96  0000                     _ANSELA	set	3931
    97  0000                     _LATC	set	3979
    98  0000                     _TRISCbits	set	3988
    99  0000                     _LATD	set	3980
   100  0000                     _TRISD	set	3989
   101  0000                     _LATA	set	3977
   102  0000                     _TRISA	set	3986
   103  0000                     _PORTB	set	3969
   104  0000                     _TRISB	set	3987
   105  0000                     _LATB	set	3978
   106  0000                     _PORTCbits	set	3970
   107                           
   108                           ; #config settings
   109  0000                     
   110                           	psect	cinit
   111  007B8C                     __pcinit:
   112                           	opt callstack 0
   113  007B8C                     start_initialization:
   114                           	opt callstack 0
   115  007B8C                     __initialization:
   116                           	opt callstack 0
   117                           
   118                           ; Initialize objects allocated to COMRAM (23 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120  007B8C  0E0D               	movlw	low __pidataCOMRAM
   121  007B8E  6EF6               	movwf	tblptrl,c
   122  007B90  0E7B               	movlw	high __pidataCOMRAM
   123  007B92  6EF7               	movwf	tblptrh,c
   124  007B94  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125  007B96  6EF8               	movwf	tblptru,c
   126  007B98  EE00  F01A         	lfsr	0,__pdataCOMRAM
   127  007B9C  EE10 F017          	lfsr	1,23
   128  007BA0                     copy_data0:
   129  007BA0  0009               	tblrd		*+
   130  007BA2  CFF5 FFEE          	movff	tablat,postinc0
   131  007BA6  50E5               	movf	postdec1,w,c
   132  007BA8  50E1               	movf	fsr1l,w,c
   133  007BAA  E1FA               	bnz	copy_data0
   134  007BAC                     end_of_initialization:
   135                           	opt callstack 0
   136  007BAC                     __end_of__initialization:
   137                           	opt callstack 0
   138  007BAC  0100               	movlb	0
   139  007BAE  EF5C  F03F         	goto	_main	;jump to C main() function
   140                           
   141                           	psect	dataCOMRAM
   142  00001A                     __pdataCOMRAM:
   143                           	opt callstack 0
   144  00001A                     	ds	16
   145  00002A                     main@F5373:
   146                           	opt callstack 0
   147  00002A                     	ds	7
   148                           
   149                           	psect	cstackCOMRAM
   150  000001                     __pcstackCOMRAM:
   151                           	opt callstack 0
   152  000001                     ?_strlen:
   153                           	opt callstack 0
   154  000001                     ?___awdiv:
   155                           	opt callstack 0
   156  000001                     ?___awmod:
   157                           	opt callstack 0
   158  000001                     LCD_rdy@busy:
   159                           	opt callstack 0
   160  000001                     ___awdiv@dividend:
   161                           	opt callstack 0
   162  000001                     ___awmod@dividend:
   163                           	opt callstack 0
   164  000001                     strlen@s:
   165                           	opt callstack 0
   166                           
   167                           ; 2 bytes @ 0x0
   168  000001                     	ds	1
   169  000002                     LCD_cmd@cmd:
   170                           	opt callstack 0
   171  000002                     LCD_writeChar@data:
   172                           	opt callstack 0
   173                           
   174                           ; 1 bytes @ 0x1
   175  000002                     	ds	1
   176  000003                     LCD_entryMode@ID:
   177                           	opt callstack 0
   178  000003                     LCD_dispControl@D:
   179                           	opt callstack 0
   180  000003                     LCD_cursor@SC:
   181                           	opt callstack 0
   182  000003                     LCD_functionSet@DL:
   183                           	opt callstack 0
   184  000003                     ___awdiv@divisor:
   185                           	opt callstack 0
   186  000003                     ___awmod@divisor:
   187                           	opt callstack 0
   188  000003                     strlen@a:
   189                           	opt callstack 0
   190                           
   191                           ; 2 bytes @ 0x2
   192  000003                     	ds	2
   193  000005                     ___awdiv@counter:
   194                           	opt callstack 0
   195  000005                     ___awmod@counter:
   196                           	opt callstack 0
   197  000005                     LCD_entryMode@SH:
   198                           	opt callstack 0
   199  000005                     LCD_dispControl@C:
   200                           	opt callstack 0
   201  000005                     LCD_cursor@RL:
   202                           	opt callstack 0
   203  000005                     LCD_functionSet@N:
   204                           	opt callstack 0
   205  000005                     LCD_writeStr@data:
   206                           	opt callstack 0
   207                           
   208                           ; 2 bytes @ 0x4
   209  000005                     	ds	1
   210  000006                     ___awdiv@sign:
   211                           	opt callstack 0
   212  000006                     ___awmod@sign:
   213                           	opt callstack 0
   214                           
   215                           ; 1 bytes @ 0x5
   216  000006                     	ds	1
   217  000007                     ??_LCD_cursor:
   218  000007                     ??_LCD_writeStr:
   219  000007                     LCD_dispControl@B:
   220                           	opt callstack 0
   221  000007                     LCD_functionSet@F:
   222                           	opt callstack 0
   223  000007                     ___awdiv@quotient:
   224                           	opt callstack 0
   225                           
   226                           ; 2 bytes @ 0x6
   227  000007                     	ds	1
   228  000008                     LCD_writeStr@length:
   229                           	opt callstack 0
   230                           
   231                           ; 2 bytes @ 0x7
   232  000008                     	ds	1
   233  000009                     ??_LCD_functionSet:
   234  000009                     ??_LCD_dispControl:
   235                           
   236                           ; 1 bytes @ 0x8
   237  000009                     	ds	1
   238  00000A                     LCD_writeStr@i:
   239                           	opt callstack 0
   240                           
   241                           ; 2 bytes @ 0x9
   242  00000A                     	ds	1
   243  00000B                     
   244                           ; 1 bytes @ 0xA
   245  00000B                     	ds	1
   246  00000C                     ??_main:
   247                           
   248                           ; 1 bytes @ 0xB
   249  00000C                     	ds	2
   250  00000E                     main@message:
   251                           	opt callstack 0
   252                           
   253                           ; 7 bytes @ 0xD
   254  00000E                     	ds	7
   255  000015                     main@modulo:
   256                           	opt callstack 0
   257                           
   258                           ; 1 bytes @ 0x14
   259  000015                     	ds	1
   260  000016                     main@i:
   261                           	opt callstack 0
   262                           
   263                           ; 2 bytes @ 0x15
   264  000016                     	ds	2
   265  000018                     main@result:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x17
   269  000018                     	ds	2
   270                           
   271 ;;
   272 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   273 ;;
   274 ;; *************** function _main *****************
   275 ;; Defined at:
   276 ;;		line 29 in file "main.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  modulo          1   20[COMRAM] unsigned char 
   281 ;;  i               2   21[COMRAM] int 
   282 ;;  result          2   23[COMRAM] int 
   283 ;;  message         7   13[COMRAM] unsigned char [7]
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:        12       0       0       0       0       0       0       0       0
   295 ;;      Temps:          2       0       0       0       0       0       0       0       0
   296 ;;      Totals:        14       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:       14 bytes
   298 ;; Hardware stack levels required when called:    4
   299 ;; This function calls:
   300 ;;		_LCD_clear
   301 ;;		_LCD_cursor
   302 ;;		_LCD_dispControl
   303 ;;		_LCD_entryMode
   304 ;;		_LCD_init
   305 ;;		_LCD_newLine
   306 ;;		_LCD_writeChar
   307 ;;		_LCD_writeStr
   308 ;;		___awdiv
   309 ;;		___awmod
   310 ;;		_ports_init
   311 ;; This function is called by:
   312 ;;		Startup code after reset
   313 ;; This function uses a non-reentrant model
   314 ;;
   315                           
   316                           	psect	text0
   317  007EB8                     __ptext0:
   318                           	opt callstack 0
   319  007EB8                     _main:
   320                           	opt callstack 27
   321  007EB8                     
   322                           ;main.c: 30:     static char key_vals[4][4] = {{1, 2, 3, 10}, {4, 5, 6, 11}, {7, 8, 9, 1
      +                          2},;main.c: 32:     char message[] = "115x44";
   323  007EB8  EE20  F02A         	lfsr	2,main@F5373
   324  007EBC  EE10  F00E         	lfsr	1,main@message
   325  007EC0  0E06               	movlw	6
   326  007EC2                     u331:
   327  007EC2  CFDB FFE3          	movff	plusw2,plusw1
   328  007EC6  06E8               	decf	wreg,f,c
   329  007EC8  E2FC               	bc	u331
   330  007ECA                     
   331                           ;main.c: 33:     ports_init();
   332  007ECA  EC24  F03E         	call	_ports_init	;wreg free
   333  007ECE                     
   334                           ;main.c: 34:     LCD_init();
   335  007ECE  EC3F  F03E         	call	_LCD_init	;wreg free
   336  007ED2                     l1162:
   337                           
   338                           ;main.c: 37:         LCD_writeStr(message);
   339  007ED2  0E0E               	movlw	low main@message
   340  007ED4  6E05               	movwf	LCD_writeStr@data^0,c
   341  007ED6  0E00               	movlw	high main@message
   342  007ED8  6E06               	movwf	(LCD_writeStr@data+1)^0,c
   343  007EDA  EC68  F03E         	call	_LCD_writeStr	;wreg free
   344  007EDE                     
   345                           ;main.c: 38:         LCD_newLine();
   346  007EDE  EC7B  F03D         	call	_LCD_newLine	;wreg free
   347  007EE2                     
   348                           ;main.c: 41:         for (int i = 0; i < 15; i++) {
   349  007EE2  0E00               	movlw	0
   350  007EE4  6E17               	movwf	(main@i+1)^0,c
   351  007EE6  0E00               	movlw	0
   352  007EE8  6E16               	movwf	main@i^0,c
   353  007EEA                     l1172:
   354                           
   355                           ;main.c: 42:             LCD_cursor(0, 1);
   356  007EEA  0E00               	movlw	0
   357  007EEC  6E04               	movwf	(LCD_cursor@SC+1)^0,c
   358  007EEE  0E00               	movlw	0
   359  007EF0  6E03               	movwf	LCD_cursor@SC^0,c
   360  007EF2  0E00               	movlw	0
   361  007EF4  6E06               	movwf	(LCD_cursor@RL+1)^0,c
   362  007EF6  0E01               	movlw	1
   363  007EF8  6E05               	movwf	LCD_cursor@RL^0,c
   364  007EFA  ECB8  F03D         	call	_LCD_cursor	;wreg free
   365  007EFE                     
   366                           ;main.c: 43:         }
   367  007EFE  4A16               	infsnz	main@i^0,f,c
   368  007F00  2A17               	incf	(main@i+1)^0,f,c
   369  007F02  BE17               	btfsc	(main@i+1)^0,7,c
   370  007F04  EF8D  F03F         	goto	u341
   371  007F08  5017               	movf	(main@i+1)^0,w,c
   372  007F0A  E109               	bnz	u340
   373  007F0C  0E0F               	movlw	15
   374  007F0E  5C16               	subwf	main@i^0,w,c
   375  007F10  A0D8               	btfss	status,0,c
   376  007F12  EF8D  F03F         	goto	u341
   377  007F16  EF8F  F03F         	goto	u340
   378  007F1A                     u341:
   379  007F1A  EF75  F03F         	goto	l1172
   380  007F1E                     u340:
   381  007F1E                     
   382                           ;main.c: 45:         LCD_entryMode(0,0);
   383  007F1E  0E00               	movlw	0
   384  007F20  6E04               	movwf	(LCD_entryMode@ID+1)^0,c
   385  007F22  0E00               	movlw	0
   386  007F24  6E03               	movwf	LCD_entryMode@ID^0,c
   387  007F26  0E00               	movlw	0
   388  007F28  6E06               	movwf	(LCD_entryMode@SH+1)^0,c
   389  007F2A  0E00               	movlw	0
   390  007F2C  6E05               	movwf	LCD_entryMode@SH^0,c
   391  007F2E  EC7F  F03D         	call	_LCD_entryMode	;wreg free
   392  007F32                     
   393                           ;main.c: 46:         int result = 115*44;
   394  007F32  0E13               	movlw	19
   395  007F34  6E19               	movwf	(main@result+1)^0,c
   396  007F36  0EC4               	movlw	196
   397  007F38  6E18               	movwf	main@result^0,c
   398                           
   399                           ;main.c: 47:         while (result) {
   400  007F3A  EFBE  F03F         	goto	l1190
   401  007F3E                     l1182:
   402                           
   403                           ;main.c: 48:             char modulo = result % 10;
   404  007F3E  C018  F001         	movff	main@result,___awmod@dividend
   405  007F42  C019  F002         	movff	main@result+1,___awmod@dividend+1
   406  007F46  0E00               	movlw	0
   407  007F48  6E04               	movwf	(___awmod@divisor+1)^0,c
   408  007F4A  0E0A               	movlw	10
   409  007F4C  6E03               	movwf	___awmod@divisor^0,c
   410  007F4E  ECA2  F03E         	call	___awmod	;wreg free
   411  007F52  5001               	movf	?___awmod^0,w,c
   412  007F54  6E15               	movwf	main@modulo^0,c
   413  007F56                     
   414                           ;main.c: 49:             modulo += 48;
   415  007F56  0E30               	movlw	48
   416  007F58  2615               	addwf	main@modulo^0,f,c
   417  007F5A                     
   418                           ;main.c: 50:             LCD_writeChar(modulo);
   419  007F5A  5015               	movf	main@modulo^0,w,c
   420  007F5C  ECAB  F03D         	call	_LCD_writeChar
   421  007F60                     
   422                           ;main.c: 51:             result /= 10;
   423  007F60  C018  F001         	movff	main@result,___awdiv@dividend
   424  007F64  C019  F002         	movff	main@result+1,___awdiv@dividend+1
   425  007F68  0E00               	movlw	0
   426  007F6A  6E04               	movwf	(___awdiv@divisor+1)^0,c
   427  007F6C  0E0A               	movlw	10
   428  007F6E  6E03               	movwf	___awdiv@divisor^0,c
   429  007F70  ECFA  F03E         	call	___awdiv	;wreg free
   430  007F74  C001  F018         	movff	?___awdiv,main@result
   431  007F78  C002  F019         	movff	?___awdiv+1,main@result+1
   432  007F7C                     l1190:
   433                           
   434                           ;main.c: 47:         while (result) {
   435  007F7C  5018               	movf	main@result^0,w,c
   436  007F7E  1019               	iorwf	(main@result+1)^0,w,c
   437  007F80  A4D8               	btfss	status,2,c
   438  007F82  EFC5  F03F         	goto	u351
   439  007F86  EFC7  F03F         	goto	u350
   440  007F8A                     u351:
   441  007F8A  EF9F  F03F         	goto	l1182
   442  007F8E                     u350:
   443  007F8E                     
   444                           ;main.c: 54:         LCD_dispControl(1,0,0);
   445  007F8E  0E00               	movlw	0
   446  007F90  6E04               	movwf	(LCD_dispControl@D+1)^0,c
   447  007F92  0E01               	movlw	1
   448  007F94  6E03               	movwf	LCD_dispControl@D^0,c
   449  007F96  0E00               	movlw	0
   450  007F98  6E06               	movwf	(LCD_dispControl@C+1)^0,c
   451  007F9A  0E00               	movlw	0
   452  007F9C  6E05               	movwf	LCD_dispControl@C^0,c
   453  007F9E  0E00               	movlw	0
   454  007FA0  6E08               	movwf	(LCD_dispControl@B+1)^0,c
   455  007FA2  0E00               	movlw	0
   456  007FA4  6E07               	movwf	LCD_dispControl@B^0,c
   457  007FA6  EC92  F03D         	call	_LCD_dispControl	;wreg free
   458                           
   459                           ;main.c: 55:         LCD_entryMode(1,0);
   460  007FAA  0E00               	movlw	0
   461  007FAC  6E04               	movwf	(LCD_entryMode@ID+1)^0,c
   462  007FAE  0E01               	movlw	1
   463  007FB0  6E03               	movwf	LCD_entryMode@ID^0,c
   464  007FB2  0E00               	movlw	0
   465  007FB4  6E06               	movwf	(LCD_entryMode@SH+1)^0,c
   466  007FB6  0E00               	movlw	0
   467  007FB8  6E05               	movwf	LCD_entryMode@SH^0,c
   468  007FBA  EC7F  F03D         	call	_LCD_entryMode	;wreg free
   469  007FBE                     
   470                           ;main.c: 56:         _delay((unsigned long)((2000)*(1000000/4000.0)));
   471  007FBE  0E03               	movlw	3
   472  007FC0  6E0D               	movwf	(??_main+1)^0,c
   473  007FC2  0E8A               	movlw	138
   474  007FC4  6E0C               	movwf	??_main^0,c
   475  007FC6  0E56               	movlw	86
   476  007FC8                     u367:
   477  007FC8  2EE8               	decfsz	wreg,f,c
   478  007FCA  D7FE               	bra	u367
   479  007FCC  2E0C               	decfsz	??_main^0,f,c
   480  007FCE  D7FC               	bra	u367
   481  007FD0  2E0D               	decfsz	(??_main+1)^0,f,c
   482  007FD2  D7FA               	bra	u367
   483  007FD4                     
   484                           ;main.c: 57:         LCD_clear();
   485  007FD4  EC77  F03D         	call	_LCD_clear	;wreg free
   486  007FD8                     
   487                           ;main.c: 58:         LCD_dispControl(1, 1, 1);
   488  007FD8  0E00               	movlw	0
   489  007FDA  6E04               	movwf	(LCD_dispControl@D+1)^0,c
   490  007FDC  0E01               	movlw	1
   491  007FDE  6E03               	movwf	LCD_dispControl@D^0,c
   492  007FE0  0E00               	movlw	0
   493  007FE2  6E06               	movwf	(LCD_dispControl@C+1)^0,c
   494  007FE4  0E01               	movlw	1
   495  007FE6  6E05               	movwf	LCD_dispControl@C^0,c
   496  007FE8  0E00               	movlw	0
   497  007FEA  6E08               	movwf	(LCD_dispControl@B+1)^0,c
   498  007FEC  0E01               	movlw	1
   499  007FEE  6E07               	movwf	LCD_dispControl@B^0,c
   500  007FF0  EC92  F03D         	call	_LCD_dispControl	;wreg free
   501  007FF4                     
   502                           ;main.c: 59:         LCD_clear();
   503  007FF4  EC77  F03D         	call	_LCD_clear	;wreg free
   504  007FF8  EF69  F03F         	goto	l1162
   505  007FFC  EF00  F000         	goto	start
   506  008000                     __end_of_main:
   507                           	opt callstack 0
   508                           
   509 ;; *************** function _ports_init *****************
   510 ;; Defined at:
   511 ;;		line 63 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;		None
   514 ;; Auto vars:     Size  Location     Type
   515 ;;		None
   516 ;; Return value:  Size  Location     Type
   517 ;;                  1    wreg      void 
   518 ;; Registers used:
   519 ;;		wreg, status,2
   520 ;; Tracked objects:
   521 ;;		On entry : 0/0
   522 ;;		On exit  : 0/0
   523 ;;		Unchanged: 0/0
   524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   525 ;;      Params:         0       0       0       0       0       0       0       0       0
   526 ;;      Locals:         0       0       0       0       0       0       0       0       0
   527 ;;      Temps:          0       0       0       0       0       0       0       0       0
   528 ;;      Totals:         0       0       0       0       0       0       0       0       0
   529 ;;Total ram usage:        0 bytes
   530 ;; Hardware stack levels used:    1
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           	psect	text1
   539  007C48                     __ptext1:
   540                           	opt callstack 0
   541  007C48                     _ports_init:
   542                           	opt callstack 30
   543  007C48                     
   544                           ;main.c: 64:     ANSELA = 0;
   545  007C48  0E00               	movlw	0
   546  007C4A  010F               	movlb	15	; () banked
   547  007C4C  6F5B               	movwf	91,b	;volatile
   548                           
   549                           ;main.c: 65:     TRISA = 0;
   550  007C4E  0E00               	movlw	0
   551  007C50  6E92               	movwf	146,c	;volatile
   552                           
   553                           ;main.c: 66:     LATA = 0;
   554  007C52  0E00               	movlw	0
   555  007C54  6E89               	movwf	137,c	;volatile
   556                           
   557                           ;main.c: 68:     ANSELD = 0;
   558  007C56  0E00               	movlw	0
   559  007C58  6F5E               	movwf	94,b	;volatile
   560                           
   561                           ;main.c: 69:     TRISD = 0b00001111;
   562  007C5A  0E0F               	movlw	15
   563  007C5C  6E95               	movwf	149,c	;volatile
   564                           
   565                           ;main.c: 70:     LATD = 0;
   566  007C5E  0E00               	movlw	0
   567  007C60  6E8C               	movwf	140,c	;volatile
   568                           
   569                           ;main.c: 72:     ANSELC = 0;
   570  007C62  0E00               	movlw	0
   571  007C64  6F5D               	movwf	93,b	;volatile
   572  007C66                     
   573                           ; BSR set to: 15
   574                           ;main.c: 73:     TRISCbits.TRISC0=0;
   575  007C66  9094               	bcf	148,0,c	;volatile
   576  007C68                     
   577                           ; BSR set to: 15
   578                           ;main.c: 74:     TRISCbits.TRISC2=0;
   579  007C68  9494               	bcf	148,2,c	;volatile
   580  007C6A                     
   581                           ; BSR set to: 15
   582                           ;main.c: 75:     TRISCbits.TRISC1=0;
   583  007C6A  9294               	bcf	148,1,c	;volatile
   584                           
   585                           ;main.c: 76:     LATC = 0;
   586  007C6C  0E00               	movlw	0
   587  007C6E  6E8B               	movwf	139,c	;volatile
   588                           
   589                           ;main.c: 78:     ANSELB = 0;
   590  007C70  0E00               	movlw	0
   591  007C72  6F5C               	movwf	92,b	;volatile
   592                           
   593                           ;main.c: 79:     TRISB = 0;
   594  007C74  0E00               	movlw	0
   595  007C76  6E93               	movwf	147,c	;volatile
   596                           
   597                           ;main.c: 80:     LATB = 0;
   598  007C78  0E00               	movlw	0
   599  007C7A  6E8A               	movwf	138,c	;volatile
   600  007C7C                     
   601                           ; BSR set to: 15
   602  007C7C  0012               	return		;funcret
   603  007C7E                     __end_of_ports_init:
   604                           	opt callstack 0
   605                           
   606 ;; *************** function ___awmod *****************
   607 ;; Defined at:
   608 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  dividend        2    0[COMRAM] int 
   611 ;;  divisor         2    2[COMRAM] int 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  sign            1    5[COMRAM] unsigned char 
   614 ;;  counter         1    4[COMRAM] unsigned char 
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2    0[COMRAM] int 
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   624 ;;      Params:         4       0       0       0       0       0       0       0       0
   625 ;;      Locals:         2       0       0       0       0       0       0       0       0
   626 ;;      Temps:          0       0       0       0       0       0       0       0       0
   627 ;;      Totals:         6       0       0       0       0       0       0       0       0
   628 ;;Total ram usage:        6 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; This function calls:
   631 ;;		Nothing
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text2
   638  007D44                     __ptext2:
   639                           	opt callstack 0
   640  007D44                     ___awmod:
   641                           	opt callstack 30
   642  007D44  0E00               	movlw	0
   643  007D46  6E06               	movwf	___awmod@sign^0,c
   644  007D48  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   645  007D4A  EFAB  F03E         	goto	u270
   646  007D4E  EFA9  F03E         	goto	u271
   647  007D52                     u271:
   648  007D52  EFB1  F03E         	goto	l1128
   649  007D56                     u270:
   650  007D56  6C01               	negf	___awmod@dividend^0,c
   651  007D58  1E02               	comf	(___awmod@dividend+1)^0,f,c
   652  007D5A  B0D8               	btfsc	status,0,c
   653  007D5C  2A02               	incf	(___awmod@dividend+1)^0,f,c
   654  007D5E  0E01               	movlw	1
   655  007D60  6E06               	movwf	___awmod@sign^0,c
   656  007D62                     l1128:
   657  007D62  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   658  007D64  EFB8  F03E         	goto	u280
   659  007D68  EFB6  F03E         	goto	u281
   660  007D6C                     u281:
   661  007D6C  EFBC  F03E         	goto	l1132
   662  007D70                     u280:
   663  007D70  6C03               	negf	___awmod@divisor^0,c
   664  007D72  1E04               	comf	(___awmod@divisor+1)^0,f,c
   665  007D74  B0D8               	btfsc	status,0,c
   666  007D76  2A04               	incf	(___awmod@divisor+1)^0,f,c
   667  007D78                     l1132:
   668  007D78  5003               	movf	___awmod@divisor^0,w,c
   669  007D7A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   670  007D7C  B4D8               	btfsc	status,2,c
   671  007D7E  EFC3  F03E         	goto	u291
   672  007D82  EFC5  F03E         	goto	u290
   673  007D86                     u291:
   674  007D86  EFE9  F03E         	goto	l1148
   675  007D8A                     u290:
   676  007D8A  0E01               	movlw	1
   677  007D8C  6E05               	movwf	___awmod@counter^0,c
   678  007D8E  EFCD  F03E         	goto	l1138
   679  007D92                     l1136:
   680  007D92  90D8               	bcf	status,0,c
   681  007D94  3603               	rlcf	___awmod@divisor^0,f,c
   682  007D96  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   683  007D98  2A05               	incf	___awmod@counter^0,f,c
   684  007D9A                     l1138:
   685  007D9A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
   686  007D9C  EFD2  F03E         	goto	u301
   687  007DA0  EFD4  F03E         	goto	u300
   688  007DA4                     u301:
   689  007DA4  EFC9  F03E         	goto	l1136
   690  007DA8                     u300:
   691  007DA8                     l1140:
   692  007DA8  5003               	movf	___awmod@divisor^0,w,c
   693  007DAA  5C01               	subwf	___awmod@dividend^0,w,c
   694  007DAC  5004               	movf	(___awmod@divisor+1)^0,w,c
   695  007DAE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
   696  007DB0  A0D8               	btfss	status,0,c
   697  007DB2  EFDD  F03E         	goto	u311
   698  007DB6  EFDF  F03E         	goto	u310
   699  007DBA                     u311:
   700  007DBA  EFE3  F03E         	goto	l1144
   701  007DBE                     u310:
   702  007DBE  5003               	movf	___awmod@divisor^0,w,c
   703  007DC0  5E01               	subwf	___awmod@dividend^0,f,c
   704  007DC2  5004               	movf	(___awmod@divisor+1)^0,w,c
   705  007DC4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
   706  007DC6                     l1144:
   707  007DC6  90D8               	bcf	status,0,c
   708  007DC8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
   709  007DCA  3203               	rrcf	___awmod@divisor^0,f,c
   710  007DCC  2E05               	decfsz	___awmod@counter^0,f,c
   711  007DCE  EFD4  F03E         	goto	l1140
   712  007DD2                     l1148:
   713  007DD2  5006               	movf	___awmod@sign^0,w,c
   714  007DD4  B4D8               	btfsc	status,2,c
   715  007DD6  EFEF  F03E         	goto	u321
   716  007DDA  EFF1  F03E         	goto	u320
   717  007DDE                     u321:
   718  007DDE  EFF5  F03E         	goto	l1152
   719  007DE2                     u320:
   720  007DE2  6C01               	negf	___awmod@dividend^0,c
   721  007DE4  1E02               	comf	(___awmod@dividend+1)^0,f,c
   722  007DE6  B0D8               	btfsc	status,0,c
   723  007DE8  2A02               	incf	(___awmod@dividend+1)^0,f,c
   724  007DEA                     l1152:
   725  007DEA  C001  F001         	movff	___awmod@dividend,?___awmod
   726  007DEE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   727  007DF2  0012               	return		;funcret
   728  007DF4                     __end_of___awmod:
   729                           	opt callstack 0
   730                           
   731 ;; *************** function ___awdiv *****************
   732 ;; Defined at:
   733 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  dividend        2    0[COMRAM] int 
   736 ;;  divisor         2    2[COMRAM] int 
   737 ;; Auto vars:     Size  Location     Type
   738 ;;  quotient        2    6[COMRAM] int 
   739 ;;  sign            1    5[COMRAM] unsigned char 
   740 ;;  counter         1    4[COMRAM] unsigned char 
   741 ;; Return value:  Size  Location     Type
   742 ;;                  2    0[COMRAM] int 
   743 ;; Registers used:
   744 ;;		wreg, status,2, status,0
   745 ;; Tracked objects:
   746 ;;		On entry : 0/0
   747 ;;		On exit  : 0/0
   748 ;;		Unchanged: 0/0
   749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   750 ;;      Params:         4       0       0       0       0       0       0       0       0
   751 ;;      Locals:         4       0       0       0       0       0       0       0       0
   752 ;;      Temps:          0       0       0       0       0       0       0       0       0
   753 ;;      Totals:         8       0       0       0       0       0       0       0       0
   754 ;;Total ram usage:        8 bytes
   755 ;; Hardware stack levels used:    1
   756 ;; This function calls:
   757 ;;		Nothing
   758 ;; This function is called by:
   759 ;;		_main
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text3
   764  007DF4                     __ptext3:
   765                           	opt callstack 0
   766  007DF4                     ___awdiv:
   767                           	opt callstack 30
   768  007DF4  0E00               	movlw	0
   769  007DF6  6E06               	movwf	___awdiv@sign^0,c
   770  007DF8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
   771  007DFA  EF03  F03F         	goto	u210
   772  007DFE  EF01  F03F         	goto	u211
   773  007E02                     u211:
   774  007E02  EF09  F03F         	goto	l1084
   775  007E06                     u210:
   776  007E06  6C03               	negf	___awdiv@divisor^0,c
   777  007E08  1E04               	comf	(___awdiv@divisor+1)^0,f,c
   778  007E0A  B0D8               	btfsc	status,0,c
   779  007E0C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
   780  007E0E  0E01               	movlw	1
   781  007E10  6E06               	movwf	___awdiv@sign^0,c
   782  007E12                     l1084:
   783  007E12  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
   784  007E14  EF10  F03F         	goto	u220
   785  007E18  EF0E  F03F         	goto	u221
   786  007E1C                     u221:
   787  007E1C  EF16  F03F         	goto	l1090
   788  007E20                     u220:
   789  007E20  6C01               	negf	___awdiv@dividend^0,c
   790  007E22  1E02               	comf	(___awdiv@dividend+1)^0,f,c
   791  007E24  B0D8               	btfsc	status,0,c
   792  007E26  2A02               	incf	(___awdiv@dividend+1)^0,f,c
   793  007E28  0E01               	movlw	1
   794  007E2A  1A06               	xorwf	___awdiv@sign^0,f,c
   795  007E2C                     l1090:
   796  007E2C  0E00               	movlw	0
   797  007E2E  6E08               	movwf	(___awdiv@quotient+1)^0,c
   798  007E30  0E00               	movlw	0
   799  007E32  6E07               	movwf	___awdiv@quotient^0,c
   800  007E34  5003               	movf	___awdiv@divisor^0,w,c
   801  007E36  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
   802  007E38  B4D8               	btfsc	status,2,c
   803  007E3A  EF21  F03F         	goto	u231
   804  007E3E  EF23  F03F         	goto	u230
   805  007E42                     u231:
   806  007E42  EF4B  F03F         	goto	l1112
   807  007E46                     u230:
   808  007E46  0E01               	movlw	1
   809  007E48  6E05               	movwf	___awdiv@counter^0,c
   810  007E4A  EF2B  F03F         	goto	l1098
   811  007E4E                     l1096:
   812  007E4E  90D8               	bcf	status,0,c
   813  007E50  3603               	rlcf	___awdiv@divisor^0,f,c
   814  007E52  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
   815  007E54  2A05               	incf	___awdiv@counter^0,f,c
   816  007E56                     l1098:
   817  007E56  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
   818  007E58  EF30  F03F         	goto	u241
   819  007E5C  EF32  F03F         	goto	u240
   820  007E60                     u241:
   821  007E60  EF27  F03F         	goto	l1096
   822  007E64                     u240:
   823  007E64                     l1100:
   824  007E64  90D8               	bcf	status,0,c
   825  007E66  3607               	rlcf	___awdiv@quotient^0,f,c
   826  007E68  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
   827  007E6A  5003               	movf	___awdiv@divisor^0,w,c
   828  007E6C  5C01               	subwf	___awdiv@dividend^0,w,c
   829  007E6E  5004               	movf	(___awdiv@divisor+1)^0,w,c
   830  007E70  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
   831  007E72  A0D8               	btfss	status,0,c
   832  007E74  EF3E  F03F         	goto	u251
   833  007E78  EF40  F03F         	goto	u250
   834  007E7C                     u251:
   835  007E7C  EF45  F03F         	goto	l1108
   836  007E80                     u250:
   837  007E80  5003               	movf	___awdiv@divisor^0,w,c
   838  007E82  5E01               	subwf	___awdiv@dividend^0,f,c
   839  007E84  5004               	movf	(___awdiv@divisor+1)^0,w,c
   840  007E86  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
   841  007E88  8007               	bsf	___awdiv@quotient^0,0,c
   842  007E8A                     l1108:
   843  007E8A  90D8               	bcf	status,0,c
   844  007E8C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
   845  007E8E  3203               	rrcf	___awdiv@divisor^0,f,c
   846  007E90  2E05               	decfsz	___awdiv@counter^0,f,c
   847  007E92  EF32  F03F         	goto	l1100
   848  007E96                     l1112:
   849  007E96  5006               	movf	___awdiv@sign^0,w,c
   850  007E98  B4D8               	btfsc	status,2,c
   851  007E9A  EF51  F03F         	goto	u261
   852  007E9E  EF53  F03F         	goto	u260
   853  007EA2                     u261:
   854  007EA2  EF57  F03F         	goto	l1116
   855  007EA6                     u260:
   856  007EA6  6C07               	negf	___awdiv@quotient^0,c
   857  007EA8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
   858  007EAA  B0D8               	btfsc	status,0,c
   859  007EAC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
   860  007EAE                     l1116:
   861  007EAE  C007  F001         	movff	___awdiv@quotient,?___awdiv
   862  007EB2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
   863  007EB6  0012               	return		;funcret
   864  007EB8                     __end_of___awdiv:
   865                           	opt callstack 0
   866                           
   867 ;; *************** function _LCD_writeStr *****************
   868 ;; Defined at:
   869 ;;		line 111 in file "./lcd.h"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  data            2    4[COMRAM] PTR unsigned char 
   872 ;;		 -> main@message(7), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  i               2    9[COMRAM] int 
   875 ;;  length          2    7[COMRAM] int 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         2       0       0       0       0       0       0       0       0
   886 ;;      Locals:         4       0       0       0       0       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0       0       0       0       0
   888 ;;      Totals:         7       0       0       0       0       0       0       0       0
   889 ;;Total ram usage:        7 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    1
   892 ;; This function calls:
   893 ;;		_LCD_rdy
   894 ;;		_strlen
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text4
   901  007CD0                     __ptext4:
   902                           	opt callstack 0
   903  007CD0                     _LCD_writeStr:
   904                           	opt callstack 29
   905  007CD0                     
   906                           ;./lcd.h: 112:     LCD_rdy();
   907  007CD0  ECEF  F03D         	call	_LCD_rdy	;wreg free
   908  007CD4                     
   909                           ;./lcd.h: 113:     PORTCbits.RC2 = 1;
   910  007CD4  8482               	bsf	130,2,c	;volatile
   911  007CD6                     
   912                           ;./lcd.h: 114:     PORTCbits.RC1 = 0;
   913  007CD6  9282               	bcf	130,1,c	;volatile
   914  007CD8                     
   915                           ;./lcd.h: 117:     int length = strlen(data);
   916  007CD8  C005  F001         	movff	LCD_writeStr@data,strlen@s
   917  007CDC  C006  F002         	movff	LCD_writeStr@data+1,strlen@s+1
   918  007CE0  EC09  F03E         	call	_strlen	;wreg free
   919  007CE4  C001  F008         	movff	?_strlen,LCD_writeStr@length
   920  007CE8  C002  F009         	movff	?_strlen+1,LCD_writeStr@length+1
   921  007CEC                     
   922                           ;./lcd.h: 118:     for (int i = 0; i < length; i++){
   923  007CEC  0E00               	movlw	0
   924  007CEE  6E0B               	movwf	(LCD_writeStr@i+1)^0,c
   925  007CF0  0E00               	movlw	0
   926  007CF2  6E0A               	movwf	LCD_writeStr@i^0,c
   927  007CF4  EF92  F03E         	goto	l1074
   928  007CF8                     l85:
   929                           
   930                           ;./lcd.h: 119:         PORTCbits.RC0 = 1;
   931  007CF8  8082               	bsf	130,0,c	;volatile
   932                           
   933                           ;./lcd.h: 120:         __nop();
   934  007CFA  F000               	nop	
   935  007CFC                     
   936                           ;./lcd.h: 121:         LATB = data[i];
   937  007CFC  500A               	movf	LCD_writeStr@i^0,w,c
   938  007CFE  2405               	addwf	LCD_writeStr@data^0,w,c
   939  007D00  6ED9               	movwf	fsr2l,c
   940  007D02  500B               	movf	(LCD_writeStr@i+1)^0,w,c
   941  007D04  2006               	addwfc	(LCD_writeStr@data+1)^0,w,c
   942  007D06  6EDA               	movwf	fsr2h,c
   943  007D08  50DF               	movf	indf2,w,c
   944  007D0A  6E8A               	movwf	138,c	;volatile
   945  007D0C                     
   946                           ;./lcd.h: 122:         __nop();
   947  007D0C  F000               	nop	
   948  007D0E                     
   949                           ;./lcd.h: 123:         PORTCbits.RC0 = 0;
   950  007D0E  9082               	bcf	130,0,c	;volatile
   951  007D10                     
   952                           ;./lcd.h: 124:         __nop();
   953  007D10  F000               	nop	
   954  007D12                     
   955                           ;./lcd.h: 125:         _delay((unsigned long)((250)*(1000000/4000.0)));
   956  007D12  0E52               	movlw	82
   957  007D14  6E07               	movwf	??_LCD_writeStr^0,c
   958  007D16  0E2A               	movlw	42
   959  007D18                     u377:
   960  007D18  2EE8               	decfsz	wreg,f,c
   961  007D1A  D7FE               	bra	u377
   962  007D1C  2E07               	decfsz	??_LCD_writeStr^0,f,c
   963  007D1E  D7FC               	bra	u377
   964  007D20                     
   965                           ;./lcd.h: 126:     }
   966  007D20  4A0A               	infsnz	LCD_writeStr@i^0,f,c
   967  007D22  2A0B               	incf	(LCD_writeStr@i+1)^0,f,c
   968  007D24                     l1074:
   969  007D24  5008               	movf	LCD_writeStr@length^0,w,c
   970  007D26  5C0A               	subwf	LCD_writeStr@i^0,w,c
   971  007D28  500B               	movf	(LCD_writeStr@i+1)^0,w,c
   972  007D2A  0A80               	xorlw	128
   973  007D2C  6E07               	movwf	??_LCD_writeStr^0,c
   974  007D2E  5009               	movf	(LCD_writeStr@length+1)^0,w,c
   975  007D30  0A80               	xorlw	128
   976  007D32  5807               	subwfb	??_LCD_writeStr^0,w,c
   977  007D34  A0D8               	btfss	status,0,c
   978  007D36  EF9F  F03E         	goto	u201
   979  007D3A  EFA1  F03E         	goto	u200
   980  007D3E                     u201:
   981  007D3E  EF7C  F03E         	goto	l85
   982  007D42                     u200:
   983  007D42  0012               	return		;funcret
   984  007D44                     __end_of_LCD_writeStr:
   985                           	opt callstack 0
   986                           
   987 ;; *************** function _strlen *****************
   988 ;; Defined at:
   989 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  s               2    0[COMRAM] PTR const unsigned char 
   992 ;;		 -> main@message(7), 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  a               2    2[COMRAM] PTR const unsigned char 
   995 ;;		 -> main@message(7), 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2    0[COMRAM] unsigned int 
   998 ;; Registers used:
   999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1005 ;;      Params:         2       0       0       0       0       0       0       0       0
  1006 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1008 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1009 ;;Total ram usage:        4 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; This function calls:
  1012 ;;		Nothing
  1013 ;; This function is called by:
  1014 ;;		_LCD_writeStr
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text5
  1019  007C12                     __ptext5:
  1020                           	opt callstack 0
  1021  007C12                     _strlen:
  1022                           	opt callstack 29
  1023  007C12  C001  F003         	movff	strlen@s,strlen@a
  1024  007C16  C002  F004         	movff	strlen@s+1,strlen@a+1
  1025  007C1A  EF11  F03E         	goto	l1042
  1026  007C1E                     l1040:
  1027  007C1E  4A01               	infsnz	strlen@s^0,f,c
  1028  007C20  2A02               	incf	(strlen@s+1)^0,f,c
  1029  007C22                     l1042:
  1030  007C22  C001  FFD9         	movff	strlen@s,fsr2l
  1031  007C26  C002  FFDA         	movff	strlen@s+1,fsr2h
  1032  007C2A  50DF               	movf	indf2,w,c
  1033  007C2C  A4D8               	btfss	status,2,c
  1034  007C2E  EF1B  F03E         	goto	u191
  1035  007C32  EF1D  F03E         	goto	u190
  1036  007C36                     u191:
  1037  007C36  EF0F  F03E         	goto	l1040
  1038  007C3A                     u190:
  1039  007C3A  5003               	movf	strlen@a^0,w,c
  1040  007C3C  5C01               	subwf	strlen@s^0,w,c
  1041  007C3E  6E01               	movwf	?_strlen^0,c
  1042  007C40  5004               	movf	(strlen@a+1)^0,w,c
  1043  007C42  5802               	subwfb	(strlen@s+1)^0,w,c
  1044  007C44  6E02               	movwf	(?_strlen+1)^0,c
  1045  007C46  0012               	return		;funcret
  1046  007C48                     __end_of_strlen:
  1047                           	opt callstack 0
  1048                           
  1049 ;; *************** function _LCD_writeChar *****************
  1050 ;; Defined at:
  1051 ;;		line 129 in file "./lcd.h"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  data            1    wreg     unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  data            1    1[COMRAM] unsigned char 
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1065 ;;      Params:         0       0       0       0       0       0       0       0       0
  1066 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1068 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1069 ;;Total ram usage:        1 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    1
  1072 ;; This function calls:
  1073 ;;		_LCD_rdy
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text6
  1080  007B56                     __ptext6:
  1081                           	opt callstack 0
  1082  007B56                     _LCD_writeChar:
  1083                           	opt callstack 29
  1084                           
  1085                           ;incstack = 0
  1086                           ;LCD_writeChar@data stored from wreg
  1087  007B56  6E02               	movwf	LCD_writeChar@data^0,c
  1088  007B58                     
  1089                           ;./lcd.h: 130:     LCD_rdy();
  1090  007B58  ECEF  F03D         	call	_LCD_rdy	;wreg free
  1091  007B5C                     
  1092                           ;./lcd.h: 131:     PORTCbits.RC2 = 1;
  1093  007B5C  8482               	bsf	130,2,c	;volatile
  1094  007B5E                     
  1095                           ;./lcd.h: 132:     PORTCbits.RC1 = 0;
  1096  007B5E  9282               	bcf	130,1,c	;volatile
  1097  007B60                     
  1098                           ;./lcd.h: 133:     PORTCbits.RC0 = 1;
  1099  007B60  8082               	bsf	130,0,c	;volatile
  1100  007B62                     
  1101                           ;./lcd.h: 134:     __nop();
  1102  007B62  F000               	nop	
  1103  007B64                     
  1104                           ;./lcd.h: 135:     LATB = data;
  1105  007B64  C002  FF8A         	movff	LCD_writeChar@data,3978	;volatile
  1106  007B68                     
  1107                           ;./lcd.h: 136:     __nop();
  1108  007B68  F000               	nop	
  1109  007B6A                     
  1110                           ;./lcd.h: 137:     PORTCbits.RC0 = 0;
  1111  007B6A  9082               	bcf	130,0,c	;volatile
  1112  007B6C                     
  1113                           ;./lcd.h: 138:     __nop();
  1114  007B6C  F000               	nop	
  1115  007B6E  0012               	return		;funcret
  1116  007B70                     __end_of_LCD_writeChar:
  1117                           	opt callstack 0
  1118                           
  1119 ;; *************** function _LCD_newLine *****************
  1120 ;; Defined at:
  1121 ;;		line 76 in file "./lcd.h"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    2
  1142 ;; This function calls:
  1143 ;;		_LCD_cmd
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text7
  1150  007AF6                     __ptext7:
  1151                           	opt callstack 0
  1152  007AF6                     _LCD_newLine:
  1153                           	opt callstack 28
  1154  007AF6                     
  1155                           ;./lcd.h: 77:     LCD_cmd(0xC0);
  1156  007AF6  0EC0               	movlw	192
  1157  007AF8  EC9E  F03D         	call	_LCD_cmd
  1158  007AFC  0012               	return		;funcret
  1159  007AFE                     __end_of_LCD_newLine:
  1160                           	opt callstack 0
  1161                           
  1162 ;; *************** function _LCD_init *****************
  1163 ;; Defined at:
  1164 ;;		line 45 in file "./lcd.h"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    3
  1185 ;; This function calls:
  1186 ;;		_LCD_clear
  1187 ;;		_LCD_dispControl
  1188 ;;		_LCD_entryMode
  1189 ;;		_LCD_functionSet
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text8
  1196  007C7E                     __ptext8:
  1197                           	opt callstack 0
  1198  007C7E                     _LCD_init:
  1199                           	opt callstack 27
  1200  007C7E                     
  1201                           ;./lcd.h: 46:     LCD_clear();
  1202  007C7E  EC77  F03D         	call	_LCD_clear	;wreg free
  1203                           
  1204                           ;./lcd.h: 47:     LCD_functionSet(1, 1, 0);
  1205  007C82  0E00               	movlw	0
  1206  007C84  6E04               	movwf	(LCD_functionSet@DL+1)^0,c
  1207  007C86  0E01               	movlw	1
  1208  007C88  6E03               	movwf	LCD_functionSet@DL^0,c
  1209  007C8A  0E00               	movlw	0
  1210  007C8C  6E06               	movwf	(LCD_functionSet@N+1)^0,c
  1211  007C8E  0E01               	movlw	1
  1212  007C90  6E05               	movwf	LCD_functionSet@N^0,c
  1213  007C92  0E00               	movlw	0
  1214  007C94  6E08               	movwf	(LCD_functionSet@F+1)^0,c
  1215  007C96  0E00               	movlw	0
  1216  007C98  6E07               	movwf	LCD_functionSet@F^0,c
  1217  007C9A  ECD9  F03D         	call	_LCD_functionSet	;wreg free
  1218                           
  1219                           ;./lcd.h: 48:     LCD_dispControl(1, 1, 1);
  1220  007C9E  0E00               	movlw	0
  1221  007CA0  6E04               	movwf	(LCD_dispControl@D+1)^0,c
  1222  007CA2  0E01               	movlw	1
  1223  007CA4  6E03               	movwf	LCD_dispControl@D^0,c
  1224  007CA6  0E00               	movlw	0
  1225  007CA8  6E06               	movwf	(LCD_dispControl@C+1)^0,c
  1226  007CAA  0E01               	movlw	1
  1227  007CAC  6E05               	movwf	LCD_dispControl@C^0,c
  1228  007CAE  0E00               	movlw	0
  1229  007CB0  6E08               	movwf	(LCD_dispControl@B+1)^0,c
  1230  007CB2  0E01               	movlw	1
  1231  007CB4  6E07               	movwf	LCD_dispControl@B^0,c
  1232  007CB6  EC92  F03D         	call	_LCD_dispControl	;wreg free
  1233                           
  1234                           ;./lcd.h: 49:     LCD_entryMode(1, 0);
  1235  007CBA  0E00               	movlw	0
  1236  007CBC  6E04               	movwf	(LCD_entryMode@ID+1)^0,c
  1237  007CBE  0E01               	movlw	1
  1238  007CC0  6E03               	movwf	LCD_entryMode@ID^0,c
  1239  007CC2  0E00               	movlw	0
  1240  007CC4  6E06               	movwf	(LCD_entryMode@SH+1)^0,c
  1241  007CC6  0E00               	movlw	0
  1242  007CC8  6E05               	movwf	LCD_entryMode@SH^0,c
  1243  007CCA  EC7F  F03D         	call	_LCD_entryMode	;wreg free
  1244  007CCE  0012               	return		;funcret
  1245  007CD0                     __end_of_LCD_init:
  1246                           	opt callstack 0
  1247                           
  1248 ;; *************** function _LCD_functionSet *****************
  1249 ;; Defined at:
  1250 ;;		line 72 in file "./lcd.h"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  DL              2    2[COMRAM] int 
  1253 ;;  N               2    4[COMRAM] int 
  1254 ;;  F               2    6[COMRAM] int 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         6       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        8 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		_LCD_cmd
  1275 ;; This function is called by:
  1276 ;;		_LCD_init
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text9
  1281  007BB2                     __ptext9:
  1282                           	opt callstack 0
  1283  007BB2                     _LCD_functionSet:
  1284                           	opt callstack 27
  1285  007BB2                     
  1286                           ;./lcd.h: 73:     LCD_cmd(0b00100000 | DL << 4 | N << 3 | F << 2);
  1287  007BB2  C007  F009         	movff	LCD_functionSet@F,??_LCD_functionSet
  1288  007BB6  90D8               	bcf	status,0,c
  1289  007BB8  3609               	rlcf	??_LCD_functionSet^0,f,c
  1290  007BBA  90D8               	bcf	status,0,c
  1291  007BBC  3609               	rlcf	??_LCD_functionSet^0,f,c
  1292  007BBE  C005  F00A         	movff	LCD_functionSet@N,??_LCD_functionSet+1
  1293  007BC2  90D8               	bcf	status,0,c
  1294  007BC4  360A               	rlcf	(??_LCD_functionSet+1)^0,f,c
  1295  007BC6  90D8               	bcf	status,0,c
  1296  007BC8  360A               	rlcf	(??_LCD_functionSet+1)^0,f,c
  1297  007BCA  90D8               	bcf	status,0,c
  1298  007BCC  360A               	rlcf	(??_LCD_functionSet+1)^0,f,c
  1299  007BCE  3803               	swapf	LCD_functionSet@DL^0,w,c
  1300  007BD0  0BF0               	andlw	240
  1301  007BD2  100A               	iorwf	(??_LCD_functionSet+1)^0,w,c
  1302  007BD4  1009               	iorwf	??_LCD_functionSet^0,w,c
  1303  007BD6  0920               	iorlw	32
  1304  007BD8  EC9E  F03D         	call	_LCD_cmd
  1305  007BDC  0012               	return		;funcret
  1306  007BDE                     __end_of_LCD_functionSet:
  1307                           	opt callstack 0
  1308                           
  1309 ;; *************** function _LCD_entryMode *****************
  1310 ;; Defined at:
  1311 ;;		line 60 in file "./lcd.h"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  ID              2    2[COMRAM] int 
  1314 ;;  SH              2    4[COMRAM] int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         4       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1329 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:        4 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    2
  1333 ;; This function calls:
  1334 ;;		_LCD_cmd
  1335 ;; This function is called by:
  1336 ;;		_LCD_init
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text10
  1342  007AFE                     __ptext10:
  1343                           	opt callstack 0
  1344  007AFE                     _LCD_entryMode:
  1345                           	opt callstack 27
  1346  007AFE                     
  1347                           ;./lcd.h: 61:     LCD_cmd(0b00000100 | ID << 1 | SH);
  1348  007AFE  5003               	movf	LCD_entryMode@ID^0,w,c
  1349  007B00  2403               	addwf	LCD_entryMode@ID^0,w,c
  1350  007B02  1005               	iorwf	LCD_entryMode@SH^0,w,c
  1351  007B04  0904               	iorlw	4
  1352  007B06  EC9E  F03D         	call	_LCD_cmd
  1353  007B0A  0012               	return		;funcret
  1354  007B0C                     __end_of_LCD_entryMode:
  1355                           	opt callstack 0
  1356                           
  1357 ;; *************** function _LCD_dispControl *****************
  1358 ;; Defined at:
  1359 ;;		line 64 in file "./lcd.h"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  D               2    2[COMRAM] int 
  1362 ;;  C               2    4[COMRAM] int 
  1363 ;;  B               2    6[COMRAM] int 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1375 ;;      Params:         6       0       0       0       0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1377 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1378 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1379 ;;Total ram usage:        7 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    2
  1382 ;; This function calls:
  1383 ;;		_LCD_cmd
  1384 ;; This function is called by:
  1385 ;;		_LCD_init
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           	psect	text11
  1391  007B24                     __ptext11:
  1392                           	opt callstack 0
  1393  007B24                     _LCD_dispControl:
  1394                           	opt callstack 27
  1395  007B24                     
  1396                           ;./lcd.h: 65:     LCD_cmd(0b00001000 | D << 2 | C << 1 | B);
  1397  007B24  90D8               	bcf	status,0,c
  1398  007B26  3405               	rlcf	LCD_dispControl@C^0,w,c
  1399  007B28  6E09               	movwf	??_LCD_dispControl^0,c
  1400  007B2A  4403               	rlncf	LCD_dispControl@D^0,w,c
  1401  007B2C  46E8               	rlncf	wreg,f,c
  1402  007B2E  0BFC               	andlw	252
  1403  007B30  1009               	iorwf	??_LCD_dispControl^0,w,c
  1404  007B32  1007               	iorwf	LCD_dispControl@B^0,w,c
  1405  007B34  0908               	iorlw	8
  1406  007B36  EC9E  F03D         	call	_LCD_cmd
  1407  007B3A  0012               	return		;funcret
  1408  007B3C                     __end_of_LCD_dispControl:
  1409                           	opt callstack 0
  1410                           
  1411 ;; *************** function _LCD_clear *****************
  1412 ;; Defined at:
  1413 ;;		line 52 in file "./lcd.h"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;		None
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0
  1428 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1430 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1431 ;;Total ram usage:        0 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    2
  1434 ;; This function calls:
  1435 ;;		_LCD_cmd
  1436 ;; This function is called by:
  1437 ;;		_LCD_init
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text12
  1443  007AEE                     __ptext12:
  1444                           	opt callstack 0
  1445  007AEE                     _LCD_clear:
  1446                           	opt callstack 27
  1447  007AEE                     
  1448                           ;./lcd.h: 53:     LCD_cmd(0b00000001);
  1449  007AEE  0E01               	movlw	1
  1450  007AF0  EC9E  F03D         	call	_LCD_cmd
  1451  007AF4  0012               	return		;funcret
  1452  007AF6                     __end_of_LCD_clear:
  1453                           	opt callstack 0
  1454                           
  1455 ;; *************** function _LCD_cursor *****************
  1456 ;; Defined at:
  1457 ;;		line 68 in file "./lcd.h"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  SC              2    2[COMRAM] int 
  1460 ;;  RL              2    4[COMRAM] int 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, status,2, status,0, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1472 ;;      Params:         4       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1475 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        5 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    2
  1479 ;; This function calls:
  1480 ;;		_LCD_cmd
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text13
  1487  007B70                     __ptext13:
  1488                           	opt callstack 0
  1489  007B70                     _LCD_cursor:
  1490                           	opt callstack 28
  1491  007B70                     
  1492                           ;./lcd.h: 69:     LCD_cmd(0b00010000 | SC << 3 | RL << 2);
  1493  007B70  C005  F007         	movff	LCD_cursor@RL,??_LCD_cursor
  1494  007B74  90D8               	bcf	status,0,c
  1495  007B76  3607               	rlcf	??_LCD_cursor^0,f,c
  1496  007B78  90D8               	bcf	status,0,c
  1497  007B7A  3607               	rlcf	??_LCD_cursor^0,f,c
  1498  007B7C  3803               	swapf	LCD_cursor@SC^0,w,c
  1499  007B7E  42E8               	rrncf	wreg,f,c
  1500  007B80  0BF8               	andlw	248
  1501  007B82  1007               	iorwf	??_LCD_cursor^0,w,c
  1502  007B84  0910               	iorlw	16
  1503  007B86  EC9E  F03D         	call	_LCD_cmd
  1504  007B8A  0012               	return		;funcret
  1505  007B8C                     __end_of_LCD_cursor:
  1506                           	opt callstack 0
  1507                           
  1508 ;; *************** function _LCD_cmd *****************
  1509 ;; Defined at:
  1510 ;;		line 80 in file "./lcd.h"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  cmd             1    wreg     unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  cmd             1    1[COMRAM] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0
  1525 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1527 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:        1 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:    1
  1531 ;; This function calls:
  1532 ;;		_LCD_rdy
  1533 ;; This function is called by:
  1534 ;;		_LCD_clear
  1535 ;;		_LCD_entryMode
  1536 ;;		_LCD_dispControl
  1537 ;;		_LCD_cursor
  1538 ;;		_LCD_functionSet
  1539 ;;		_LCD_newLine
  1540 ;;		_LCD_returnHome
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text14
  1545  007B3C                     __ptext14:
  1546                           	opt callstack 0
  1547  007B3C                     _LCD_cmd:
  1548                           	opt callstack 28
  1549                           
  1550                           ;incstack = 0
  1551                           ;LCD_cmd@cmd stored from wreg
  1552  007B3C  6E02               	movwf	LCD_cmd@cmd^0,c
  1553  007B3E                     
  1554                           ;./lcd.h: 81:     LCD_rdy();
  1555  007B3E  ECEF  F03D         	call	_LCD_rdy	;wreg free
  1556  007B42                     
  1557                           ;./lcd.h: 82:     PORTCbits.RC2=0;
  1558  007B42  9482               	bcf	130,2,c	;volatile
  1559  007B44                     
  1560                           ;./lcd.h: 83:     PORTCbits.RC1=0;
  1561  007B44  9282               	bcf	130,1,c	;volatile
  1562  007B46                     
  1563                           ;./lcd.h: 84:     PORTCbits.RC0=1;
  1564  007B46  8082               	bsf	130,0,c	;volatile
  1565  007B48                     
  1566                           ;./lcd.h: 85:     __nop();
  1567  007B48  F000               	nop	
  1568  007B4A                     
  1569                           ;./lcd.h: 86:     LATB = cmd;
  1570  007B4A  C002  FF8A         	movff	LCD_cmd@cmd,3978	;volatile
  1571  007B4E                     
  1572                           ;./lcd.h: 87:     __nop();
  1573  007B4E  F000               	nop	
  1574  007B50                     
  1575                           ;./lcd.h: 88:     PORTCbits.RC0=0;
  1576  007B50  9082               	bcf	130,0,c	;volatile
  1577  007B52                     
  1578                           ;./lcd.h: 89:     __nop();
  1579  007B52  F000               	nop	
  1580  007B54  0012               	return		;funcret
  1581  007B56                     __end_of_LCD_cmd:
  1582                           	opt callstack 0
  1583                           
  1584 ;; *************** function _LCD_rdy *****************
  1585 ;; Defined at:
  1586 ;;		line 92 in file "./lcd.h"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  busy            1    0[COMRAM] unsigned char 
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, status,2, status,0
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1600 ;;      Params:         0       0       0       0       0       0       0       0       0
  1601 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1602 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1603 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1604 ;;Total ram usage:        1 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_LCD_cmd
  1610 ;;		_LCD_writeStr
  1611 ;;		_LCD_writeChar
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text15
  1616  007BDE                     __ptext15:
  1617                           	opt callstack 0
  1618  007BDE                     _LCD_rdy:
  1619                           	opt callstack 29
  1620  007BDE                     
  1621                           ;./lcd.h: 93:     char busy = 0x80;
  1622  007BDE  0E80               	movlw	128
  1623  007BE0  6E01               	movwf	LCD_rdy@busy^0,c
  1624  007BE2                     
  1625                           ;./lcd.h: 94:     TRISB = 0b11111111;
  1626  007BE2  6893               	setf	147,c	;volatile
  1627  007BE4                     
  1628                           ;./lcd.h: 95:     PORTCbits.RC2 = 0;
  1629  007BE4  9482               	bcf	130,2,c	;volatile
  1630  007BE6                     
  1631                           ;./lcd.h: 96:     PORTCbits.RC1 = 1;
  1632  007BE6  8282               	bsf	130,1,c	;volatile
  1633                           
  1634                           ;./lcd.h: 99:     while (busy) {
  1635  007BE8  EFFE  F03D         	goto	l808
  1636  007BEC                     l79:
  1637                           
  1638                           ;./lcd.h: 100:         PORTCbits.RC0 = 1;
  1639  007BEC  8082               	bsf	130,0,c	;volatile
  1640                           
  1641                           ;./lcd.h: 101:         __nop();
  1642  007BEE  F000               	nop	
  1643  007BF0                     
  1644                           ;./lcd.h: 102:         busy = PORTB & 0x80;
  1645  007BF0  5081               	movf	129,w,c	;volatile
  1646  007BF2  0B80               	andlw	128
  1647  007BF4  6E01               	movwf	LCD_rdy@busy^0,c
  1648  007BF6                     
  1649                           ;./lcd.h: 103:         __nop();
  1650  007BF6  F000               	nop	
  1651  007BF8                     
  1652                           ;./lcd.h: 104:         PORTCbits.RC0 = 0;
  1653  007BF8  9082               	bcf	130,0,c	;volatile
  1654  007BFA                     
  1655                           ;./lcd.h: 105:         __nop();
  1656  007BFA  F000               	nop	
  1657  007BFC                     l808:
  1658                           
  1659                           ;./lcd.h: 99:     while (busy) {
  1660  007BFC  5001               	movf	LCD_rdy@busy^0,w,c
  1661  007BFE  A4D8               	btfss	status,2,c
  1662  007C00  EF04  F03E         	goto	u11
  1663  007C04  EF06  F03E         	goto	u10
  1664  007C08                     u11:
  1665  007C08  EFF6  F03D         	goto	l79
  1666  007C0C                     u10:
  1667  007C0C                     
  1668                           ;./lcd.h: 108:     TRISB = 0b00000000;
  1669  007C0C  0E00               	movlw	0
  1670  007C0E  6E93               	movwf	147,c	;volatile
  1671  007C10  0012               	return		;funcret
  1672  007C12                     __end_of_LCD_rdy:
  1673                           	opt callstack 0
  1674  0000                     
  1675                           	psect	rparam
  1676  0000                     tosu	equ	0xFFF
  1677                           tosh	equ	0xFFE
  1678                           tosl	equ	0xFFD
  1679                           stkptr	equ	0xFFC
  1680                           pclatu	equ	0xFFB
  1681                           pclath	equ	0xFFA
  1682                           pcl	equ	0xFF9
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           indf0	equ	0xFEF
  1690                           postinc0	equ	0xFEE
  1691                           postdec0	equ	0xFED
  1692                           preinc0	equ	0xFEC
  1693                           plusw0	equ	0xFEB
  1694                           fsr0h	equ	0xFEA
  1695                           fsr0l	equ	0xFE9
  1696                           wreg	equ	0xFE8
  1697                           indf1	equ	0xFE7
  1698                           postinc1	equ	0xFE6
  1699                           postdec1	equ	0xFE5
  1700                           preinc1	equ	0xFE4
  1701                           plusw1	equ	0xFE3
  1702                           fsr1h	equ	0xFE2
  1703                           fsr1l	equ	0xFE1
  1704                           bsr	equ	0xFE0
  1705                           indf2	equ	0xFDF
  1706                           postinc2	equ	0xFDE
  1707                           postdec2	equ	0xFDD
  1708                           preinc2	equ	0xFDC
  1709                           plusw2	equ	0xFDB
  1710                           fsr2h	equ	0xFDA
  1711                           fsr2l	equ	0xFD9
  1712                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> main@message(COMRAM[7]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 7
		 -> main@message(COMRAM[7]), 

    LCD_writeStr@data	PTR unsigned char  size(2) Largest target is 7
		 -> main@message(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_LCD_writeStr
    _LCD_writeStr->_strlen
    _LCD_writeChar->_LCD_rdy
    _LCD_newLine->_LCD_cmd
    _LCD_init->_LCD_functionSet
    _LCD_functionSet->_LCD_cmd
    _LCD_entryMode->_LCD_cmd
    _LCD_dispControl->_LCD_cmd
    _LCD_clear->_LCD_cmd
    _LCD_cursor->_LCD_cmd
    _LCD_cmd->_LCD_rdy

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    4723
                                             11 COMRAM    14    14      0
                          _LCD_clear
                         _LCD_cursor
                    _LCD_dispControl
                      _LCD_entryMode
                           _LCD_init
                        _LCD_newLine
                      _LCD_writeChar
                       _LCD_writeStr
                            ___awdiv
                            ___awmod
                         _ports_init
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_writeStr                                         7     5      2     370
                                              4 COMRAM     7     5      2
                            _LCD_rdy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_writeChar                                        1     1      0      30
                                              1 COMRAM     1     1      0
                            _LCD_rdy
 ---------------------------------------------------------------------------------
 (1) _LCD_newLine                                          0     0      0      30
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    1664
                          _LCD_clear
                    _LCD_dispControl
                      _LCD_entryMode
                    _LCD_functionSet
 ---------------------------------------------------------------------------------
 (2) _LCD_functionSet                                      8     2      6     324
                                              2 COMRAM     8     2      6
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_entryMode                                        4     0      4     530
                                              2 COMRAM     4     0      4
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_dispControl                                      7     1      6     780
                                              2 COMRAM     7     1      6
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0      30
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_cursor                                           5     1      4     226
                                              2 COMRAM     5     1      4
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      30
                                              1 COMRAM     1     1      0
                            _LCD_rdy
 ---------------------------------------------------------------------------------
 (2) _LCD_rdy                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_cmd
       _LCD_rdy
   _LCD_cursor
     _LCD_cmd
       _LCD_rdy
   _LCD_dispControl
     _LCD_cmd
       _LCD_rdy
   _LCD_entryMode
     _LCD_cmd
       _LCD_rdy
   _LCD_init
     _LCD_clear
       _LCD_cmd
         _LCD_rdy
     _LCD_dispControl
       _LCD_cmd
         _LCD_rdy
     _LCD_entryMode
       _LCD_cmd
         _LCD_rdy
     _LCD_functionSet
       _LCD_cmd
         _LCD_rdy
   _LCD_newLine
     _LCD_cmd
       _LCD_rdy
   _LCD_writeChar
     _LCD_rdy
   _LCD_writeStr
     _LCD_rdy
     _strlen
   ___awdiv
   ___awmod
   _ports_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      30       1       50.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30       6        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Nov 17 00:53:37 2020

                      l51 7CCE                        l60 7B0A                        l54 7AF4  
                      l63 7B3A                        l72 7AFC                        l81 7C10  
                      l66 7B8A                        l90 7B6E                        l75 7B54  
                      l69 7BDC                        l85 7CF8                        l79 7BEC  
                      l87 7D42                        u10 7C0C                        u11 7C08  
            ___awdiv@sign 0006              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000               __CFG_LVP$ON 000000  
                     l110 7C7C                       l344 7EB6                       l357 7DF2  
                     l800 7BF0                       l810 7C0C                       l802 7BF6  
                     l804 7BF8                       l820 7B48                       l812 7B3E  
                     l900 7C68                       l806 7BFA                       l822 7B4A  
                     l814 7B42                       l830 7AEE                       l902 7C6A  
                     l808 7BFC                       l824 7B4E                       l816 7B44  
                     l826 7B50                       l818 7B46                       l828 7B52  
                     l852 7AF6                       l790 7C46                       l792 7BDE  
                     l880 7B5C                       l794 7BE2                       l890 7B68  
                     l882 7B5E                       l796 7BE4                       l892 7B6A  
                     l884 7B60                       l798 7BE6                       l894 7B6C  
                     l886 7B62                       l878 7B58                       l888 7B64  
                     l896 7C48                       l898 7C66              __CFG_CPB$OFF 000000  
                     u200 7D42                       u201 7D3E                       u210 7E06  
                     u211 7E02                       u220 7E20                       u300 7DA8  
                     u221 7E1C                       u301 7DA4                       u230 7E46  
                     u310 7DBE                       u231 7E42                       u311 7DBA  
                     u240 7E64                       u320 7DE2                       u241 7E60  
                     u321 7DDE                       u250 7E80                       u251 7E7C  
                     u331 7EC2                       u260 7EA6                       u340 7F1E  
                     u261 7EA2                       u341 7F1A                       u190 7C3A  
                     u270 7D56                       u350 7F8E                       u191 7C36  
                     u271 7D52                       u351 7F8A                       u280 7D70  
                     u281 7D6C                       u290 7D8A              __CFG_CPD$OFF 000000  
                     u291 7D86                       u367 7FC8                       u377 7D18  
             ?_LCD_cursor 0003              ___awmod@sign 0006                       wreg 000FE8  
  __size_of_LCD_entryMode 000E  __size_of_LCD_dispControl 0018           __end_of_LCD_cmd 7B56  
         __end_of_LCD_rdy 7C12                      l1100 7E64                      l1110 7E90  
                    l1102 7E6A                      l1032 7BB2                      l1040 7C1E  
                    l1104 7E80                      l1112 7E96                      l1120 7D44  
                    l1200 7FF4                      l1050 7B70                      l1034 7B24  
                    l1042 7C22                      l1114 7EA6                      l1106 7E88  
                    l1130 7D70                      l1122 7D48                      l1036 7AFE  
                    l1044 7C3A                      l1060 7CEC                      l1052 7CD0  
                    l1116 7EAE                      l1108 7E8A                      l1140 7DA8  
                    l1132 7D78                      l1124 7D56                      l1038 7C12  
                    l1070 7D12                      l1062 7CFC                      l1054 7CD4  
                    l1150 7DE2                      l1142 7DBE                      l1134 7D8A  
                    l1126 7D5E                      l1048 7C7E                      l1072 7D20  
                    l1064 7D0C                      l1056 7CD6                      l1080 7E06  
                    l1152 7DEA                      l1144 7DC6                      l1136 7D92  
                    l1128 7D62                      l1160 7ECE                      l1066 7D0E  
                    l1074 7D24                      l1058 7CD8                      l1090 7E2C  
                    l1082 7E0E                      l1146 7DCC                      l1138 7D9A  
                    l1162 7ED2                      l1068 7D10                      l1092 7E34  
                    l1084 7E12                      l1076 7DF4                      l1148 7DD2  
                    l1180 7F32                      l1172 7EEA                      l1164 7EDE  
                    l1156 7EB8                      l1094 7E46                      l1086 7E20  
                    l1078 7DF8                      l1182 7F3E                      l1190 7F7C  
                    l1174 7EFE                      l1166 7EE2                      l1158 7ECA  
                    l1096 7E4E                      l1088 7E28                      l1192 7F8E  
                    l1184 7F56                      l1176 7F02                      l1098 7E56  
                    l1194 7FBE                      l1186 7F5A                      l1178 7F1E  
                    l1196 7FD4                      l1188 7F60                      l1198 7FD8  
                    _LATA 000F89                      _LATB 000F8A                      _LATC 000F8B  
                    _LATD 000F8C               main@message 000E              ?_LCD_newLine 0001  
                    _main 7EB8                      fsr2h 000FDA                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9             __CFG_BORV$190 000000  
                    start 0000             __CFG_IESO$OFF 000000        __size_of_LCD_clear 0008  
           __CFG_MCLRE$ON 000000              ___param_bank 000000          __end_of_LCD_init 7CD0  
                   ?_main 0001           __end_of___awdiv 7EB8           __end_of___awmod 7DF4  
         ___awdiv@divisor 0003           ___awdiv@counter 0005                     _PORTB 000F81  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
            main@key_vals 001A             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
           __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
          __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000    __size_of_LCD_writeChar 001A            __CFG_EBTRB$OFF 000000  
                   main@i 0016                     tablat 000FF5                     plusw1 000FE3  
                   plusw2 000FDB                     status 000FD8            __CFG_T3CMX$RC0 000000  
          __CFG_ICPRT$OFF 000000            __CFG_PBADEN$ON 000000       __size_of_LCD_cursor 001C  
           ?_LCD_writeStr 0005             _LCD_entryMode 7AFE           __initialization 7B8C  
            __end_of_main 8000               LCD_rdy@busy 0001            __CFG_PCLKEN$ON 000000  
         LCD_entryMode@ID 0003           LCD_entryMode@SH 0005                    ??_main 000C  
           __activetblptr 000000                 ??_LCD_cmd 0002                 ??_LCD_rdy 0001  
       __end_of_LCD_clear 7AF6            __CFG_SDOMX$RB3 000000           __CFG_CCP2MX$RC1 000000  
__size_of_LCD_functionSet 002C          ___awdiv@dividend 0001                    _ANSELA 000F5B  
                  _ANSELB 000F5C                    _ANSELC 000F5D                    _ANSELD 000F5E  
          __CFG_WDTEN$OFF 000000         ??_LCD_dispControl 0009            ??_LCD_writeStr 0007  
          ?_LCD_entryMode 0003            __CFG_XINST$OFF 000000             _LCD_writeChar 7B56  
               ??___awdiv 0005            __CFG_STVREN$ON 000000                 ??___awmod 0005  
        ___awdiv@quotient 0007           ___awmod@divisor 0003           ___awmod@counter 0005  
                  _strlen 7C12              __pdataCOMRAM 001A                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8      __CFG_LS48MHZ$SYS24X4 000000  
              __accesstop 0060   __end_of__initialization 7BAC                 ?_LCD_init 0001  
           ___rparam_used 000001      __size_of_LCD_newLine 0008            ?_LCD_writeChar 0001  
          __pcstackCOMRAM 0001          __CFG_nPWRTEN$OFF 000000              LCD_cursor@SC 0003  
            LCD_cursor@RL 0005              ??_LCD_cursor 0007         ??_LCD_functionSet 0009  
              ??_LCD_init 000B           ??_LCD_entryMode 0007        __end_of_LCD_cursor 7B8C  
       __CFG_PLLSEL$PLL4X 000000                   ?_strlen 0001                   _LCD_cmd 7B3C  
                 _LCD_rdy 7BDE      __end_of_LCD_writeStr 7D44           ??_LCD_writeChar 0002  
                 __Hparam 0000                   __Lparam 0000                   ___awdiv 7DF4  
                 ___awmod 7D44          LCD_functionSet@F 0007          LCD_functionSet@N 0005  
                 __pcinit 7B8C          LCD_writeStr@data 0005                   __ramtop 0800  
                 __ptext0 7EB8                   __ptext1 7C48                   __ptext2 7D44  
                 __ptext3 7DF4                   __ptext4 7CD0                   __ptext5 7C12  
                 __ptext6 7B56                   __ptext7 7AF6                   __ptext8 7C7E  
                 __ptext9 7BB2           __size_of_strlen 0036          ___awmod@dividend 0001  
         _LCD_dispControl 7B24                 _LCD_clear 7AEE      end_of_initialization 7BAC  
                 postdec1 000FE5                   postinc0 000FEE                   strlen@a 0003  
                 strlen@s 0001                 _PORTCbits 000F82                 _TRISCbits 000F94  
              _ports_init 7C48                ?_LCD_clear 0001                main@modulo 0015  
              main@result 0018         __size_of_LCD_init 0052   __end_of_LCD_dispControl 7B3C  
           __pidataCOMRAM 7B0D     __size_of_LCD_writeStr 0074                LCD_cmd@cmd 0002  
          __end_of_strlen 7C48       start_initialization 7B8C           _LCD_functionSet 7BB2  
           ??_LCD_newLine 0003           __CFG_nLPBOR$OFF 000000              _LCD_writeStr 7CD0  
                ??_strlen 0003                  ?_LCD_cmd 0001                  ?_LCD_rdy 0001  
             ?_ports_init 0001               ??_LCD_clear 0003     __end_of_LCD_entryMode 7B0C  
     __end_of_LCD_newLine 7AFE        LCD_writeStr@length 0008                  ?___awdiv 0001  
                ?___awmod 0001             LCD_writeStr@i 000A   __end_of_LCD_functionSet 7BDE  
        ?_LCD_dispControl 0003                  _LCD_init 7C7E     __end_of_LCD_writeChar 7B70  
        __CFG_WDTPS$32768 000000                 main@F5373 002A         LCD_writeChar@data 0002  
     __size_of_ports_init 0036         __CFG_CFGPLLEN$OFF 000000          __size_of_LCD_cmd 001A  
        __size_of_LCD_rdy 0034                 copy_data0 7BA0               _LCD_newLine 7AF6  
                __Hrparam 0000                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
        __size_of___awdiv 00C4          __size_of___awmod 00B0          ?_LCD_functionSet 0003  
       LCD_functionSet@DL 0003                  __ptext10 7AFE                  __ptext11 7B24  
                __ptext12 7AEE                  __ptext13 7B70                  __ptext14 7B3C  
                __ptext15 7BDE             __size_of_main 0148          LCD_dispControl@B 0007  
        LCD_dispControl@C 0005          LCD_dispControl@D 0003                _LCD_cursor 7B70  
            ??_ports_init 0001      __CFG_CPUDIV$NOCLKDIV 000000        __end_of_ports_init 7C7E  
      __CFG_FOSC$INTOSCIO 000000  
