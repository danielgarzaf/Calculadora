Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/debug\Calculadora.X.debug.sym \
  --cmf=dist/default/debug\Calculadora.X.debug.cmf -z -Q18F45K50 \
  -oC:\Users\danie\AppData\Local\Temp\sjek.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/debug/Calculadora.X.debug.map -E1 -ver=XC8 --acfsm=1493 \
  -ASTACK=060h-07FFh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0800h-08FFhx120 -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-07FFh -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ABANK6=0600h-06FFh -ABANK7=0700h-07FFh -ASFR=0F53h-0F5Fh,0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\danie\AppData\Local\Temp\sjek.o \
  dist/default/debug\Calculadora.X.debug.o 

Object code version is 3.11

Machine type is 18F45K50

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\danie\AppData\Local\Temp\sjek.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/debug\Calculadora.X.debug.o
                smallconst                          800      800       14      400       0
                text11                              A3A      A3A       34      40A       0
                text10                              AC4      AC4       1A      40A       0
                text9                               B14      B14        8      40A       0
                text8                               ADE      ADE       18      40A       0
                text7                               B06      B06        E      40A       0
                text6                               A6E      A6E       2C      40A       0
                text5                               93C      93C       52      40A       0
                text4                               9CC      9CC       3A      40A       0
                text3                               8BC      8BC       80      40A       0
                text2                               814      814       A8      40A       0
                text1                               98E      98E       3E      40A       0
                text0                               A06      A06       34      40A       0
                cstackCOMRAM                         11       11        E        1       1
                dataCOMRAM                            1        1       10        1       1
                cinit                               A9A      A9A       2A      40A       0
                idataCOMRAM                         AF6      AF6       10      40A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text11                              A3A      A3A       34         0
                text10                              AC4      AC4       1A         0
                text9                               B14      B14        8         0
                text8                               ADE      ADE       18         0
                text7                               B06      B06        E         0
                text6                               A6E      A6E       2C         0
                text5                               93C      93C       52         0
                text4                               9CC      9CC       3A         0
                text3                               8BC      8BC       80         0
                text2                               814      814       A8         0
                text1                               98E      98E       3E         0
                text0                               A06      A06       34         0
                cinit                               A9A      A9A       2A         0
                idataCOMRAM                         AF6      AF6       10         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800       14         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                         11       11        E         1
                dataCOMRAM                            1        1       10         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                dataCOMRAM                     000001  00001E  00001F         1       1  COMRAM  
                smallconst                     000800  000014  000814       400       0  SMALLCON
                text2                          000814  000308  000B1C       40A       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00001F-0007FF              7E1
        CODE             000004-0007FF              7FC
                         000B1C-007FFF             74E4
        COMRAM           00001F-00005F               41
        CONST            000004-0007FF              7FC
                         000B1C-007FFF             74E4
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000B1C-007FFF             74E4
        RAM              000060-0007FF              100
        SFR              000F53-000FFF                D
        SMALLCONST       000B1C-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?_strlen                  cstackCOMRAM 000011
LCD_cmd@cmd               cstackCOMRAM 000012
LCD_dispControl@B         cstackCOMRAM 000017
LCD_dispControl@C         cstackCOMRAM 000015
LCD_dispControl@D         cstackCOMRAM 000013
LCD_entryMode@ID          cstackCOMRAM 000013
LCD_entryMode@SH          cstackCOMRAM 000015
LCD_functionSet@DL        cstackCOMRAM 000013
LCD_functionSet@F         cstackCOMRAM 000017
LCD_functionSet@N         cstackCOMRAM 000015
LCD_rdy@busy              cstackCOMRAM 000011
LCD_writeStr@data         cstackCOMRAM 000015
LCD_writeStr@i            cstackCOMRAM 00001B
LCD_writeStr@length       cstackCOMRAM 000019
_ANSELA                   (abs)        000F5B
_ANSELB                   (abs)        000F5C
_ANSELC                   (abs)        000F5D
_ANSELD                   (abs)        000F5E
_INTCON2                  (abs)        000FF1
_LATA                     (abs)        000F89
_LATB                     (abs)        000F8A
_LATC                     (abs)        000F8B
_LATD                     (abs)        000F8C
_LCD_clear                text9        000B14
_LCD_cmd                  text10       000AC4
_LCD_dispControl          text8        000ADE
_LCD_entryMode            text7        000B06
_LCD_functionSet          text6        000A6E
_LCD_init                 text5        00093C
_LCD_rdy                  text11       000A3A
_LCD_writeStr             text3        0008BC
_PORTB                    (abs)        000F81
_PORTCbits                (abs)        000F82
_PORTD                    (abs)        000F83
_TRISA                    (abs)        000F92
_TRISB                    (abs)        000F93
_TRISCbits                (abs)        000F94
_TRISD                    (abs)        000F95
_WPUB                     (abs)        000F85
__CFG_BOREN$SBORDIS       (abs)        000000
__CFG_BORV$190            (abs)        000000
__CFG_CCP2MX$RC1          (abs)        000000
__CFG_CFGPLLEN$OFF        (abs)        000000
__CFG_CP0$OFF             (abs)        000000
__CFG_CP1$OFF             (abs)        000000
__CFG_CP2$OFF             (abs)        000000
__CFG_CP3$OFF             (abs)        000000
__CFG_CPB$OFF             (abs)        000000
__CFG_CPD$OFF             (abs)        000000
__CFG_CPUDIV$NOCLKDIV     (abs)        000000
__CFG_EBTR0$OFF           (abs)        000000
__CFG_EBTR1$OFF           (abs)        000000
__CFG_EBTR2$OFF           (abs)        000000
__CFG_EBTR3$OFF           (abs)        000000
__CFG_EBTRB$OFF           (abs)        000000
__CFG_FCMEN$OFF           (abs)        000000
__CFG_FOSC$INTOSCIO       (abs)        000000
__CFG_ICPRT$OFF           (abs)        000000
__CFG_IESO$OFF            (abs)        000000
__CFG_LS48MHZ$SYS24X4     (abs)        000000
__CFG_LVP$ON              (abs)        000000
__CFG_MCLRE$ON            (abs)        000000
__CFG_PBADEN$ON           (abs)        000000
__CFG_PCLKEN$ON           (abs)        000000
__CFG_PLLSEL$PLL4X        (abs)        000000
__CFG_SDOMX$RB3           (abs)        000000
__CFG_STVREN$ON           (abs)        000000
__CFG_T3CMX$RC0           (abs)        000000
__CFG_WDTEN$OFF           (abs)        000000
__CFG_WDTPS$32768         (abs)        000000
__CFG_WRT0$OFF            (abs)        000000
__CFG_WRT1$OFF            (abs)        000000
__CFG_WRT2$OFF            (abs)        000000
__CFG_WRT3$OFF            (abs)        000000
__CFG_WRTB$OFF            (abs)        000000
__CFG_WRTC$OFF            (abs)        000000
__CFG_WRTD$OFF            (abs)        000000
__CFG_XINST$OFF           (abs)        000000
__CFG_nLPBOR$OFF          (abs)        000000
__CFG_nPWRTEN$OFF         (abs)        000000
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbank6                  bank6        000000
__Hbank7                  bank7        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__Hbss                    bss          000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       30000E
__Hconst                  const        000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__HdataCOMRAM             dataCOMRAM   000000
__Heeprom_data            eeprom_data  000000
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__HidataCOMRAM            idataCOMRAM  000000
__Hidloc                  idloc        200008
__Hifardata               ifardata     000000
__Hinit                   init         000004
__Hintcode                intcode      000000
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    000000
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      000000
__Hram                    ram          000000
__Hramtop                 ramtop       000800
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000000
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   000814
__Hspace_0                (abs)        30000E
__Hspace_1                (abs)        00001F
__Hspace_2                (abs)        000000
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         000000
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext2                  text2        000000
__Htext3                  text3        000000
__Htext4                  text4        000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbank6                  bank6        000000
__Lbank7                  bank7        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__Lbss                    bss          000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       300000
__Lconst                  const        000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__LdataCOMRAM             dataCOMRAM   000000
__Leeprom_data            eeprom_data  000000
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__LidataCOMRAM            idataCOMRAM  000000
__Lidloc                  idloc        200000
__Lifardata               ifardata     000000
__Linit                   init         000000
__Lintcode                intcode      000000
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    000000
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      000000
__Lram                    ram          000000
__Lramtop                 ramtop       000800
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000800
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         000000
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext2                  text2        000000
__Ltext3                  text3        000000
__Ltext4                  text4        000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        30000E
__S1                      (abs)        00001F
__S2                      (abs)        000000
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___param_bank             (abs)        000000
___rparam_used            (abs)        000001
___sp                     stack        000000
__accesstop               (abs)        000060
__activetblptr            (abs)        000002
__end_of_LCD_clear        text9        000B1C
__end_of_LCD_cmd          text10       000ADE
__end_of_LCD_dispControl  text8        000AF6
__end_of_LCD_entryMode    text7        000B14
__end_of_LCD_functionSet  text6        000A9A
__end_of_LCD_init         text5        00098E
__end_of_LCD_rdy          text11       000A6E
__end_of_LCD_writeStr     text3        00093C
__end_of__initialization  cinit        000ABA
__end_of_getKey           text2        0008BC
__end_of_main             text0        000A3A
__end_of_ports_init       text1        0009CC
__end_of_strlen           text4        000A06
__initialization          cinit        000A9A
__mediumconst             mediumconst  000000
__pcinit                  cinit        000A9A
__pcstackCOMRAM           cstackCOMRAM 000011
__pdataCOMRAM             dataCOMRAM   000001
__pidataCOMRAM            idataCOMRAM  000AF6
__psmallconst             smallconst   000800
__ptext0                  text0        000A06
__ptext1                  text1        00098E
__ptext10                 text10       000AC4
__ptext11                 text11       000A3A
__ptext2                  text2        000814
__ptext3                  text3        0008BC
__ptext4                  text4        0009CC
__ptext5                  text5        00093C
__ptext6                  text6        000A6E
__ptext7                  text7        000B06
__ptext8                  text8        000ADE
__ptext9                  text9        000B14
__ramtop                  ramtop       000800
__size_of_LCD_clear       (abs)        000000
__size_of_LCD_cmd         (abs)        000000
__size_of_LCD_dispControl (abs)        000000
__size_of_LCD_entryMode   (abs)        000000
__size_of_LCD_functionSet (abs)        000000
__size_of_LCD_init        (abs)        000000
__size_of_LCD_rdy         (abs)        000000
__size_of_LCD_writeStr    (abs)        000000
__size_of_getKey          (abs)        000000
__size_of_main            (abs)        000000
__size_of_ports_init      (abs)        000000
__size_of_strlen          (abs)        000000
__smallconst              smallconst   000800
_getKey                   text2        000814
_main                     text0        000A06
_ports_init               text1        00098E
_strlen                   text4        0009CC
end_of_initialization     cinit        000ABA
getKey@bit_cols           cstackCOMRAM 00001C
getKey@bit_rows           cstackCOMRAM 00001B
getKey@cols               cstackCOMRAM 000015
getKey@i                  cstackCOMRAM 000016
getKey@j                  cstackCOMRAM 000018
getKey@key_vals           cstackCOMRAM 000011
getKey@rows               cstackCOMRAM 00001A
getKey@value              cstackCOMRAM 000014
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
main@key_vals             dataCOMRAM   000001
main@opIdx2               cstackCOMRAM 00001E
stackhi                   (abs)        0007FF
stacklo                   (abs)        000060
start                     init         000000
start_initialization      cinit        000A9A
strlen@a                  cstackCOMRAM 000013
strlen@s                  cstackCOMRAM 000011


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 33 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  operators      14    0        unsigned char [14]
  opIdx2          1   13[COMRAM] unsigned char 
  operation       1    0        unsigned char 
  opIdx1          1    0        unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_LCD_clear
		_LCD_init
		_LCD_writeStr
		_getKey
		_ports_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _ports_init *****************
 Defined at:
		line 72 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getKey *****************
 Defined at:
		line 118 in file "main.c"
 Parameters:    Size  Location     Type
  key_vals        2    0[COMRAM] PTR unsigned char [4]
		 -> main@key_vals(16), 
 Auto vars:     Size  Location     Type
  cols            1    4[COMRAM] unsigned char 
  j               2    7[COMRAM] int 
  bit_cols        1   11[COMRAM] unsigned char 
  rows            1    9[COMRAM] unsigned char 
  i               2    5[COMRAM] int 
  bit_rows        1   10[COMRAM] unsigned char 
  value           1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         9       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_writeStr *****************
 Defined at:
		line 110 in file "./lcd.h"
 Parameters:    Size  Location     Type
  data            2    4[COMRAM] PTR unsigned char 
		 -> STR_1(17), 
 Auto vars:     Size  Location     Type
  i               2   10[COMRAM] int 
  length          2    8[COMRAM] short 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD_rdy
		_strlen
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> STR_1(17), 
 Auto vars:     Size  Location     Type
  a               2    2[COMRAM] PTR const unsigned char 
		 -> STR_1(17), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_writeStr
 This function uses a non-reentrant model


 *************** function _LCD_init *****************
 Defined at:
		line 44 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_LCD_clear
		_LCD_dispControl
		_LCD_entryMode
		_LCD_functionSet
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_functionSet *****************
 Defined at:
		line 71 in file "./lcd.h"
 Parameters:    Size  Location     Type
  DL              2    2[COMRAM] short 
  N               2    4[COMRAM] short 
  F               2    6[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
 This function uses a non-reentrant model


 *************** function _LCD_entryMode *****************
 Defined at:
		line 59 in file "./lcd.h"
 Parameters:    Size  Location     Type
  ID              2    2[COMRAM] short 
  SH              2    4[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _LCD_dispControl *****************
 Defined at:
		line 63 in file "./lcd.h"
 Parameters:    Size  Location     Type
  D               2    2[COMRAM] short 
  C               2    4[COMRAM] short 
  B               2    6[COMRAM] short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
		_printCalcResult
 This function uses a non-reentrant model


 *************** function _LCD_clear *****************
 Defined at:
		line 51 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_LCD_cmd
 This function is called by:
		_LCD_init
		_main
 This function uses a non-reentrant model


 *************** function _LCD_cmd *****************
 Defined at:
		line 79 in file "./lcd.h"
 Parameters:    Size  Location     Type
  cmd             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  cmd             1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_LCD_rdy
 This function is called by:
		_LCD_clear
		_LCD_entryMode
		_LCD_dispControl
		_LCD_functionSet
		_LCD_returnHome
		_LCD_cursor
		_LCD_newLine
 This function uses a non-reentrant model


 *************** function _LCD_rdy *****************
 Defined at:
		line 91 in file "./lcd.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  busy            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_LCD_cmd
		_LCD_writeStr
		_LCD_writeChar
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	09CC	0000	59

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c estimated size: 59

./lcd.h
		_LCD_clear     		CODE           	0B14	0000	9
		_LCD_writeStr  		CODE           	08BC	0000	129
		_LCD_dispControl		CODE           	0ADE	0000	25
		_LCD_functionSet		CODE           	0A6E	0000	45
		_LCD_init      		CODE           	093C	0000	83
		_LCD_entryMode 		CODE           	0B06	0000	15
		_LCD_rdy       		CODE           	0A3A	0000	53
		_LCD_cmd       		CODE           	0AC4	0000	27

./lcd.h estimated size: 386

shared
		__initialization		CODE           	0A9A	0000	33

shared estimated size: 33

main.c
		_ports_init    		CODE           	098E	0000	63
		_main          		CODE           	0A06	0000	53
		_getKey        		CODE           	0814	0000	169

main.c estimated size: 285

